[{"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\index.js":"1","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\App.js":"2","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\reportWebVitals.js":"3","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Header.js":"4","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\sidebar.js":"5","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Sidebar.js":"6","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplier.js":"7","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PO.js":"8","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PORequestManageForm.js":"9","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PORequestForm.js":"10","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\POFinalReviewForm.js":"11","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contract.js":"12","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contractDetails.js":"13","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplierDetails.js":"14","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplierDetailsUpdate.js":"15","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\purchaseOrder.js":"16","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\purchaseOrderDetails.js":"17","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Home.js":"18","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contractDetailsUpdate.js":"19","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Modal.js":"20","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Branch.js":"21","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\BranchDetails.js":"22","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\BranchDetailsUpdate.js":"23"},{"size":560,"mtime":1630952270320,"results":"24","hashOfConfig":"25"},{"size":2715,"mtime":1633327433267,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1629772529146,"results":"27","hashOfConfig":"25"},{"size":1619,"mtime":1631256273199,"results":"28","hashOfConfig":"25"},{"size":912,"mtime":1630981065200,"results":"29","hashOfConfig":"25"},{"size":8730,"mtime":1633327415435,"results":"30","hashOfConfig":"25"},{"size":18594,"mtime":1633364243337,"results":"31","hashOfConfig":"25"},{"size":4790,"mtime":1633351361470,"results":"32","hashOfConfig":"25"},{"size":7138,"mtime":1633354428225,"results":"33","hashOfConfig":"25"},{"size":9501,"mtime":1633353933513,"results":"34","hashOfConfig":"25"},{"size":5531,"mtime":1633351191720,"results":"35","hashOfConfig":"25"},{"size":12622,"mtime":1633356921139,"results":"36","hashOfConfig":"25"},{"size":12639,"mtime":1633284038079,"results":"37","hashOfConfig":"25"},{"size":11093,"mtime":1633286785238,"results":"38","hashOfConfig":"25"},{"size":12412,"mtime":1633363875589,"results":"39","hashOfConfig":"25"},{"size":8139,"mtime":1631582568690,"results":"40","hashOfConfig":"25"},{"size":8720,"mtime":1631584686453,"results":"41","hashOfConfig":"25"},{"size":1687,"mtime":1633317792936,"results":"42","hashOfConfig":"25"},{"size":10789,"mtime":1633357082626,"results":"43","hashOfConfig":"25"},{"size":3478,"mtime":1631968238097,"results":"44","hashOfConfig":"25"},{"size":6670,"mtime":1633356435432,"results":"45","hashOfConfig":"25"},{"size":8799,"mtime":1633355986641,"results":"46","hashOfConfig":"25"},{"size":7382,"mtime":1633326169972,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12k4m2g",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\index.js",[],["112","113"],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\App.js",["114"],"import './App.css';\r\n// bootstrap css\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n/*import AddInventory from './components/classComponent';/* <AddInventory/>*/\r\n import AddBranch from './components/Branch';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\n// import { Sidebar } from 'semantic-ui-react';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\nimport AddSupplier from './components/supplier';\r\n// import GeneratePO from './components/purchaseOrder';\r\nimport CreateContract from './components/contract';\r\nimport ContractDetails from './components/contractDetails';\r\nimport SupplierDetails from './components/supplierDetails';\r\nimport supplierUpdate from './components/supplierDetailsUpdate';\r\n// import PurchaseOrderDetails from './components/purchaseOrderDetails';\r\nimport GeneratePO from './components/PO';\r\nimport HomePage from './components/Home';\r\nimport contractUpdate from './components/contractDetailsUpdate';\r\nimport BranchDetails from './components/BranchDetails';\r\nimport BranchUpdate from './components/BranchDetailsUpdate'\r\n// import POFinalReviewForm from \"./components/POFinalReviewForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      {/* <Header/> */}\r\n      <Sidebar/>\r\n      {/* <div>Home Page</div> */}\r\n      <section>\r\n        <Switch>\r\n         \r\n          <Route exact path=\"/branchAdd\" component={AddBranch}/>\r\n          <Route exact path=\"/supplierAdd\" component={AddSupplier}/>\r\n          <Route exact path=\"/generatePO\" component={GeneratePO}/>\r\n          <Route exact path=\"/contractAdd\" component={CreateContract}/>\r\n          <Route exact path=\"/contractDetails\" component={ContractDetails}/>\r\n          <Route exact path=\"/supplierDetails\" component={SupplierDetails}/>\r\n          <Route exact path=\"/updateSup/:id\" component={supplierUpdate}/>\r\n          <Route exact path=\"/\" component={HomePage}/>\r\n          <Route exact path=\"/updateCont/:id\" component={contractUpdate}/>\r\n          <Route exact path=\"/branchDetails\" component={BranchDetails}/>\r\n          <Route exact path=\"/updateBranch\" component={BranchUpdate}/>\r\n          {/* <Route exact path=\"/POFinalForm\" component={POFinalReviewForm}/> */}\r\n          {/* <Route exact path=\"/poDetails/:id\" component={PurchaseOrderDetails}/> */}\r\n          \r\n        </Switch>\r\n      </section>\r\n    </Router>\r\n    // <Router>\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n    //   <Header/>\r\n    //     <h1>Wickrama Super Inventory Management</h1>\r\n       \r\n    //     <AddProduct/>\r\n        \r\n    //   </header>\r\n    // </div>\r\n    // </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\reportWebVitals.js",[],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Header.js",["115"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\" style={{ color: \"red\" }}>\r\n        Navbar\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n        \r\n          <li className=\"nav-item\">\r\n            {/* <Link to=\"/productadd\" className=\"nav-link\">\r\n              Add products\r\n            </Link> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/supplieradd\" className=\"nav-link\">\r\n              Add suppliers\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/generatePO\" className=\"nav-link\">\r\n              PO Management\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contractAdd\" className=\"nav-link\">\r\n              Contract Management\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        \r\n      </div>\r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\sidebar.js",[],["116","117"],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Sidebar.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React from 'react';\r\nimport \"./style.css\"\r\nimport {Link} from 'react-router-dom';\r\nimport wsLogo from './wsLogo.jpg';\r\nimport Header from './Header';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import { createTheme } from '@material-ui/core/styles';\r\n// import purple from '@material-ui/core/colors/purple';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n// const theme = createTheme({\r\n//   palette: {\r\n//     secondary: {\r\n//       main: '#f44336',\r\n//       contrastText: '#f44336',\r\n//     },\r\n//   },\r\n// });\r\n\r\nexport default function Sidebar(){\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n  \r\nreturn(\r\n// const Sidebar =({children})=>(\r\n  \r\n\r\n    \r\n    <div>\r\n<aside class=\"sidebar position-fixed top-0 left-0 overflow-auto h-100 float-left\" id=\"show-side-navigation1\">\r\n  <i class=\"uil-bars close-aside d-md-none d-lg-none\" data-close=\"show-side-navigation1\"></i>\r\n  <div class=\"sidebar-header d-flex justify-content-center align-items-center px-3 py-4\">\r\n    <img\r\n         class=\"rounded-pill img-fluid\"\r\n         width=\"160\"\r\n         src={wsLogo}\r\n         \r\n         alt=\"\"/>\r\n    <div class=\"ms-2\">\r\n      <h5 class=\"fs-6 mb-0\">\r\n        <Link></Link>\r\n      </h5>\r\n      <p class=\"mt-1 mb-0\"></p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"search position-relative text-center px-4 py-3 mt-2\">\r\n    \r\n  </div>\r\n\r\n  <ul class=\"categories list-unstyled\">\r\n    <li class=\"has-dropdown\">\r\n      <i class=\"uil-estate fa-fw\"></i><Link style={{color:\"red\",fontSize:\"22px\"}} to=\"/\"> Admin Dashboard</Link>\r\n      \r\n    </li>\r\n    <li class=\"\">\r\n      <i class=\"uil-folder\"></i><Link to=\"/\">Item Management</Link>\r\n    </li>\r\n    \r\n    {/* <li class=\"has-dropdown\">\r\n      <i class=\"uil-envelope-download fa-fw\"></i><Link to=\"/\"> Purchase & Inventory</Link>\r\n       \r\n    </li> */}\r\n     {/* Link created to Purchase Management */}\r\n    {/* <li>\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n        class=\"btn btn-secondary\"\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          color=\"secondary\"\r\n        >\r\n          Purchases Management\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  <li className=\"nav-item\">\r\n                  <MenuItem onClick={handleClose}><Link to=\"/productadd\" className=\"nav-link\">Add Product</Link></MenuItem>\r\n                  </li>\r\n                    <MenuItem onClick={handleClose}>My </MenuItem>\r\n                    <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n    </li> */}\r\n\r\n    {/* Link created to Supplier Management */}\r\n\r\n    {/* <li>\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n        class=\"btn btn-secondary\"\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          color=\"secondary\"\r\n        >\r\n          Supplier Management\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  <li className=\"nav-item\">\r\n                  <MenuItem onClick={handleClose}><Link to=\"/productadd\" className=\"nav-link\">Add Product</Link></MenuItem>\r\n                  </li>\r\n                    <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                    <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n    </li> */}\r\n\r\n<li>\r\n<div class=\"ui compact menu\" class=\"ui purple basic button\">\r\n  <div class=\"ui simple dropdown item\">\r\n    Supplier Management\r\n    <i class=\"dropdown icon\"></i>\r\n    <div class=\"menu\">\r\n      <div class=\"item\"><Link to=\"/supplieradd\" className=\"nav-link\">Add suppliers</Link></div>\r\n      <div class=\"item\"><Link to=\"/supplierDetails\" className=\"nav-link\">Supplier Details</Link></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</li>\r\n\r\n<li>\r\n<div class=\"ui compact menu\" class=\"ui blue basic button\">\r\n  <div class=\"ui simple dropdown item\">\r\n    Purchase Management\r\n    <i class=\"dropdown icon\"></i>\r\n    <div class=\"menu\">\r\n      <div class=\"item\"><Link to=\"/generatePO\" className=\"nav-link\">PO Management</Link></div>\r\n      {/* <div class=\"item\"><Link to=\"/POFinalForm\" className=\"nav-link\">PO Details</Link></div> */}\r\n      <div class=\"item\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</li>\r\n<li>\r\n<div class=\"ui compact menu\" class=\"ui olive basic button\"> \r\n  <div class=\"ui simple dropdown item\">\r\n    Inventory Management\r\n    <i class=\"dropdown icon\"></i>\r\n    <div class=\"menu\">\r\n      <div class=\"item\"><Link to=\"/branchAdd\" className=\"nav-link\">Create Branch</Link></div>\r\n      <div class=\"item\"><Link to=\"/branchDetails\" className=\"nav-link\">Branch Details</Link></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</li>\r\n<li>\r\n<div class=\"ui compact menu\" class=\"ui negative basic button\">\r\n  <div class=\"ui simple dropdown item\" >\r\n    Contract Management\r\n    <i class=\"dropdown icon\"></i>\r\n    <div class=\"menu\">\r\n      <div class=\"item\"> <Link to=\"/contractAdd\" className=\"nav-link\">Contract Management</Link></div>\r\n      <div class=\"item\"> <Link to=\"/contractDetails\" className=\"nav-link\">Contract Details</Link></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</li>\r\n    \r\n    <li class=\"has-dropdown\">\r\n      <i class=\"uil-panel-add\"></i><Link>User Report</Link>\r\n      \r\n    </li>\r\n    <li class=\"\">\r\n      <i class=\"uil-map-marker\"></i><Link> My Profile</Link>\r\n    </li>\r\n  </ul>\r\n</aside>\r\n\r\n<section id=\"wrapper\">\r\n\r\n  {<nav class=\"navbar navbar-expand-md\">\r\n    <div class=\"container-fluid mx-2\">\r\n      <div class=\"navbar-header\">\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#toggle-navbar\" aria-controls=\"toggle-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <i class=\"uil-bars text-white\"></i>\r\n        </button>\r\n        <Link to=\"/\" class=\"navbar-brand\">WS<span class=\"main-color\">Shopping</span></Link>\r\n      </div>\r\n      \r\n    </div>\r\n  </nav> }\r\n{/*   \r\n    <Header/> */}\r\n  <div class=\"p-4\">\r\n    <div class=\"welcome\">\r\n      <div class=\"content rounded-3 p-3\">\r\n          <div class=\"body-bg\"> \r\n      {/* <div>{children}</div> */}\r\n      </div>\r\n\r\n      </div>\r\n      \r\n   </div>\r\n    \r\n  </div>\r\n</section>\r\n\r\n</div>\r\n);\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplier.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React from \"react\";\r\nimport { useState, createRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { ValidatorComponent } from \"react-material-ui-form-validator\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wickrama Super Online Shopping Store\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(),\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(0),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n    // marginTop: theme.spacing(),\r\n    // marginBottom: theme.spacing(3),\r\n    // padding: theme.spacing(2),\r\n    // [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n    //   marginTop: theme.spacing(0),\r\n    //   marginBottom: theme.spacing(6),\r\n    //   padding: theme.spacing(3),\r\n    // },\r\n  },\r\n\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  // paper: {\r\n  //   marginTop: theme.spacing(),\r\n  //   marginBottom: theme.spacing(3),\r\n  //   padding: theme.spacing(2),\r\n  //   [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n  //     marginTop: theme.spacing(0),\r\n  //     marginBottom: theme.spacing(6),\r\n  //     padding: theme.spacing(3),\r\n  //   },\r\n}));\r\n\r\nexport default function AddSupplier() {\r\n  const [supplierName, setsupplierName] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const [supplierEmail, setSupplierEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [productType, setProductType] = useState(\"\");\r\n  const [supplierType, setSupplierType] = useState(\"\");\r\n  const [supplierItemType, setSupplierItemType] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [branchWillingToSupply, setBranchWillingToSupply] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const [value, setValue] = React.useState(\"internalSupplier\");\r\n\r\n  // //error handelling\r\n  // const [supplierNameErr, setsupplierNameErr] = useState({});\r\n  // const [locationErr, setLocationErr] = useState({});\r\n  // ........../\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  //code goes here...\r\n\r\n  const [supplier, setSupplier] = useState({\r\n    supplierName: \"\",\r\n    supplierEmail: \"\",\r\n    phoneNumber: \"\",\r\n    productType: \"\",\r\n    supplierType: \"\",\r\n    supplierItemType: \"\",\r\n    location: \"\",\r\n    branchWillingToSupply: \"\",\r\n    date: new Date(),\r\n    branches: [{}],\r\n    category: [{}],\r\n  });\r\n\r\n  const [branch, setBranches] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(supplier);\r\n\r\n    axios\r\n      .post(\"http://localhost:9000/supplier/add\", supplier)\r\n      .then((res) => {\r\n        alert(\"Supplier Successfully added!\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        alert(error.message);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/branch/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setBranches(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/category/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCategory(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  //modal part\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        {/* <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            \"& > :not(style)\": {\r\n              m: 1,\r\n              width: 1000,\r\n              height: 600,\r\n              marginLeft: 500,\r\n            },\r\n          }}\r\n        > */}\r\n        {/* <Paper elevation={3} /> */}\r\n        <Paper className={classes.paper} elevation={10}>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              <center> ADD Supplier </center>\r\n            </Typography>\r\n            {/* <Paper elevation={3} /> */}\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n            >\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"SupplierName\"\r\n                    name=\"supplierName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"supplierName\"\r\n                    sx={{ width: 395 }}\r\n                    label=\"Supplier Name\"\r\n                    autoFocus\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        supplierName: e.target.value,\r\n                      })\r\n                    }\r\n                    // onChange={(e) => e.target.checked ? setContract({...supplier,supplierName: e.target.value}):(null)}\r\n                  />\r\n                  {/* <div className=\"ui fluid selection dropdown\">\r\n                <input type=\"hidden\" name=\"user\" />\r\n                <i className=\"dropdown icon\"></i>\r\n                <div className=\"default text\">Select Supplier Name</div>\r\n                <div className=\"menu\">\r\n                  {supplier ? supplier.map((sup) => {\r\n                    return(\r\n                      <div key={sup._id} className=\"item\" data-value=\"jenny\">\r\n                      <img\r\n                        className=\"ui mini avatar image\"\r\n                        src=\"/images/avatar/small/jenny.jpg\"\r\n                      />\r\n                      Jenny Hess\r\n                    </div>\r\n                    )\r\n                  }): (null)}\r\n                  \r\n                </div>\r\n              </div> */}\r\n                  {/* <select>\r\n              {supplier ? supplier.map((sup) => {\r\n                return(\r\n                <div key={sup._id}>\r\n                  <option value={sup._id}>{sup.supplierName}</option>\r\n                </div>\r\n                  \r\n                )\r\n              }): (null)}\r\n              </select> */}\r\n                </Grid>\r\n                {/* {Object.keys(supplierNameErr).map((key)=>{\r\n                      return <div style={{color : \"red\"}}>{supplierNameErr[key]}</div>\r\n                    })} */}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"SupplierEmail\"\r\n                    name=\"supplierEmail\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"supplierEmail\"\r\n                    label=\"supplier Email\"\r\n                    // type=\"email\"\r\n                    autoFocus\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        supplierEmail: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"phoneNumber\"\r\n                    label=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    type=\"phone\"\r\n                    autoComplete=\"PhoneNumber\"\r\n                    autoFocus\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        phoneNumber: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productType\"\r\n                    label=\"Product Category \"\r\n                    name=\"Product Type\"\r\n                    autoComplete=\"Product Type\"\r\n                    autoFocus\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        productType: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Grid> */}\r\n\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    // value={supplierName}\r\n                    label=\"Product Category\"\r\n                    sx={{ width: 395 }}\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        productType: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Product Category</em>\r\n                    </MenuItem>\r\n                    {category\r\n                      ? category.map((cat) => {\r\n                          return (\r\n                            <MenuItem value={cat.category}>\r\n                              {cat.category}\r\n                            </MenuItem>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Supplier Type</FormLabel>\r\n                    <RadioGroup\r\n                      aria-label=\"supplierType\"\r\n                      name=\"supplierType\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"internalSupplier\"\r\n                        control={<Radio />}\r\n                        label=\"Internal Supplier\"\r\n                        onChange={(e) =>\r\n                          setSupplier({\r\n                            ...supplier,\r\n                            supplierType: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"externalSupplier\"\r\n                        control={<Radio />}\r\n                        label=\"External Supplier\"\r\n                        onChange={(e) =>\r\n                          setSupplier({\r\n                            ...supplier,\r\n                            supplierType: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"wickrama Supplier\"\r\n                        control={<Radio />}\r\n                        label=\"Wickrama Supplier\"\r\n                        onChange={(e) =>\r\n                          setSupplier({\r\n                            ...supplier,\r\n                            supplierType: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                      {/* <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" /> */}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  {/* <TextField\r\n                id=\"date\"\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                defaultValue=\"2021-09-14\"\r\n                className={classes.textField}\r\n                sx={{ width: 220 }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e) =>\r\n                  setSupplier({ ...supplier, date: e.target.value })\r\n                }\r\n              /> */}\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Date\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    sx={{ width: 187 }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"supplierItemType\"\r\n                    name=\"supplierItemType\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    ful\r\n                    lWidth\r\n                    sx={{ width: 395 }}\r\n                    id=\"supplierItemType\"\r\n                    label=\"Supplier Item\"\r\n                    autoFocus\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        supplierItemType: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"location\"\r\n                    label=\"Location\"\r\n                    name=\"location\"\r\n                    autoComplete=\"location\"\r\n                    onChange={(e) =>\r\n                      setSupplier({ ...supplier, location: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                {/* {Object.keys(locationErr).map((key)=>{\r\n                      return <div style={{color : \"red\"}}>{locationErr[key]}</div>\r\n                    })} */}\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    // value={supplierName}\r\n                    label=\"Branch Willing To Supply\"\r\n                    sx={{ width: 395 }}\r\n                    onChange={(e) =>\r\n                      setSupplier({\r\n                        ...supplier,\r\n                        branchWillingToSupply: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Branch Willing To Supply</em>\r\n                    </MenuItem>\r\n                    {branch\r\n                      ? branch.map((bran) => {\r\n                          return (\r\n                            <MenuItem value={bran.branchName}>\r\n                              {bran.branchName}\r\n                            </MenuItem>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Select>\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"date\"\r\n                label=\"Date\"\r\n                autoComplete=\"date\"\r\n                id=\"date\"\r\n                onChange={(e) => setSupplier({...supplier,date: e.target.value})}\r\n              />\r\n            </Grid> */}\r\n\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                    }\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                ADD SUPPLIER\r\n              </Button>\r\n\r\n              {/* <Grid container justifyContent=\"flex-end\"></Grid> */}\r\n            </form>\r\n          </Container>\r\n        </Paper>\r\n        {/* <Box mt={5}>\r\n              <Copyright />\r\n            </Box> */}\r\n\r\n        {/* </Box> */}\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PO.js",["159","160","161","162"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PORequestForm from \"./PORequestForm\";\r\nimport PORequestManageForm from \"./PORequestManageForm\";\r\nimport POFinalReviewForm from \"./POFinalReviewForm\";\r\nimport contract from \"./contract\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wickrama Super Online Shopping Store\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 1200,\r\n      marginLeft: \"255px\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(0),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = [\r\n  \"Purchase Request\",\r\n  \"Purchase Request Management\",\r\n  \"Purchase Order\",\r\n];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <PORequestForm />;\r\n    case 1:\r\n      return <PORequestManageForm />;\r\n    case 2:\r\n      return <POFinalReviewForm />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function PO() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Wickrama Super\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n           <ul> Purchase Order</ul>\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order\r\n                  confirmation, and will send you an update when your order is\r\n                  ready to be delivered.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PORequestManageForm.js",["163","164","165","166","167","168","169","170"],"import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport SoloAlert from 'soloalert'\r\nimport axios from 'axios';\r\nimport { MDBCol } from \"mdbreact\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', '', '','',''),\r\n \r\n];\r\nconst columns = [\r\n  { id: 'itemName',\r\n    label: 'Item Name',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  { id: 'itemPrice',\r\n    label: 'Item Price',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  { id: 'itemQuantity',\r\n    label: 'Item Quantity',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  {\r\n    id: 'branch',\r\n    label: 'Branch',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'supplierNamel',\r\n    label: 'Supplier Name',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'date',\r\n    label: 'Date',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'priority',\r\n    label: 'Priority',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'totalItemPrice',\r\n    label: 'Total Item Price',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nexport default function CustomizedTables() {\r\n  const [poRequestManage,setpoRequestManage]=useState([]);\r\n \r\n  const [filtered,setfiltered]=useState([]);\r\n  const [itemName, setitemName] =useState([]);\r\n\r\n  //This useEffect function used to get all poRequestManage's data\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/poroutes/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setpoRequestManage(data);\r\n      });\r\n  }, []);\r\n\r\n  async function delet(id) {\r\n    SoloAlert.confirm({\r\n\r\n        title: \"Confirm Delete\",\r\n        body: \"Are you sure\",\r\n        theme: \"dark\",\r\n        useTransparency: true,\r\n        onOk: async function () {\r\n\r\n            try {\r\n                const result = await (await axios.delete(`http://localhost:9000/poroutes/deletePO/${id}`)).status; console.log(result)\r\n\r\n                if (result === 200) {\r\n                    SoloAlert.alert({\r\n                        title: \"Welcome!\",\r\n                        body: \"Deletion is successful\",\r\n                        icon: \"success\",\r\n                        theme: \"dark\",\r\n                        useTransparency: true,\r\n                        onOk: function () {\r\n                            window.location = \"\"\r\n                        },\r\n\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                SoloAlert.alert({\r\n                    title: \"Oops!\",\r\n                    body: \"Something went wrong\",\r\n                    icon: \"error\",\r\n                    theme: \"dark\",\r\n                    useTransparency: true,\r\n                    onOk: function () {\r\n\r\n                    },\r\n\r\n                });\r\n            }\r\n        },\r\n        onCancel: function () {\r\n            SoloAlert.alert({\r\n                title: \"Oops!\",\r\n                body: \"You canceled delete request\",\r\n                icon: \"warning\",\r\n                theme: \"dark\",\r\n                useTransparency: true,\r\n                onOk: function () {\r\n\r\n                },\r\n\r\n            });\r\n        },\r\n\r\n    })\r\n}\r\n\r\nconst [searchTerm,setSearchTerm]=useState('');\r\n\r\n  return (\r\n     \r\n    <TableContainer component={Paper}>\r\n      <MDBCol md=\"6\">\r\n      <input class=\"form-control\" id=\"myInput\" type=\"text\" placeholder=\"Search..\" onChange={e => { setSearchTerm(e.target.value) }} />\r\n    </MDBCol>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n     \r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"right\">Item Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Item Price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Item Quantity</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Branch</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Supplier Name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Date</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Priority</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total Item Price</StyledTableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {poRequestManage.filter((value)=>{\r\n  if(searchTerm===\"\"){\r\n    return value;\r\n    console.log(value.itemName)\r\n    console.log(\"name\")\r\n  }else if(value.itemName.toLowerCase().includes(searchTerm.toLowerCase())){\r\n    return value;\r\n  }\r\n})\r\n.map((pof,i)=>(\r\n            <StyledTableRow key={pof._id}>\r\n              {/* <StyledTableCell component=\"th\" scope=\"row\">\r\n                {pof._id}\r\n              </StyledTableCell> */}\r\n              <StyledTableCell align=\"right\">{pof.itemName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.itemPrice}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.itemQuantity}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.branch}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.supplierName}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.date}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.priority}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{pof.itemPrice*pof.itemQuantity}</StyledTableCell>\r\n              <StyledTableCell><Link to={\"/updatepofch/\"+pof._id} type=\"submit\" class=\"btn btn-primary\" ><i class=\"fa fa-trash\"></i>  UPDATE</Link></StyledTableCell>\r\n                  <StyledTableCell><button type=\"submit\" class=\"btn btn-danger\" onClick={(e) => { delet(pof._id) }}><i class=\"fa fa-trash\"></i>  DELETE</button></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\PORequestForm.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport { useState, createRef } from \"react\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Yakkala Branch\",\r\n  \"Gampaha Branch\",\r\n  \"Nittabuwa Branch\",\r\n  \"Kiribathgoda Branch\",\r\n  \"Kadawatha Branch\",\r\n  \"Mahara Branch\",\r\n];\r\nexport default function PurchaseRequestForm() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [value, setValue] = React.useState(\"female\");\r\n  const [branch, setBranches] = useState([]);\r\n  const [supplier, setSuppliers] = useState([]);\r\n\r\n  const e = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const [porequest, setPOrequest] = useState({\r\n    itemName: \"\",\r\n    itemPrice:\"\",\r\n    itemQuantity:\"\",\r\n    branch: \"\",\r\n    supplierName: \"\",\r\n    date: new Date(),\r\n    priority: \"\",\r\n    totalItemPrice:\"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(porequest);\r\n    axios\r\n      .post(\"http://localhost:9000/poroutes/add\", porequest)\r\n      .then((res) => {\r\n        alert(\"Purchase Order added Successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/branch/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setBranches(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/supplier/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSuppliers(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Purchase Request Form\r\n      </Typography>\r\n      <form\r\n        className={classes.form}\r\n        noValidate\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"itemName\"\r\n              name=\"itemName\"\r\n              label=\"Item name\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, itemName: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"itemPrice\"\r\n              name=\"Item Price\"\r\n              label=\"Item Price\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, itemPrice: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"itemQuantity\"\r\n              name=\"Item Quantity\"\r\n              label=\"Item Quantity\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, itemQuantity: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    // value={supplierName}\r\n                    label=\"Branch\"\r\n                    sx={{ width: 565 }}\r\n                    onChange={(e) =>\r\n                      setPOrequest({ ...porequest, branch: e.target.value })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Branch </em>\r\n                    </MenuItem>\r\n                    {branch\r\n                      ? branch.map((bran) => {\r\n                          return (\r\n                            <MenuItem value={bran.branchName}>\r\n                              {bran.branchName}\r\n                            </MenuItem>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Select>\r\n                </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  // value={supplierName}\r\n                  label=\"SupplierName\"\r\n                  sx={{ width: 565 }}\r\n                  onChange={(e) =>\r\n                    setPOrequest({ ...porequest, supplierName: e.target.value })\r\n                  }\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Supplier Name</em>\r\n                  </MenuItem>\r\n                  {supplier\r\n                    ? supplier.map((sup) => {\r\n                        return (\r\n                          <MenuItem value={sup.supplierName}>\r\n                            {sup.supplierName}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              label=\"Item Priority\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, priority: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n            required\r\n            variant=\"outlined\"\r\n              id=\"date\"\r\n              label=\"Order Date\"\r\n              type=\"date\"\r\n              sx={{ width: 200 }}\r\n              defaultValue=\"2021-09-14\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, date: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"totalItemPrice\"\r\n              name=\"Total Item Price\"\r\n              label=\"totalItemPrice\"\r\n              fullWidth\r\n              autoComplete=\"given-name\"\r\n              onChange={(e) =>\r\n                setPOrequest({ ...porequest, totalItemPrice: e.target.value })\r\n              }\r\n            />\r\n          </Grid> */}\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\POFinalReviewForm.js",["196","197","198","199","200","201","202","203","204"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport jspdf from 'jspdf'\r\nimport \"jspdf-autotable\"\r\nimport img from '../components/wsLogo.jpg'\r\nimport img1 from '../components/signature.jpg'\r\n\r\nconst rows = [\r\n  { id: 'itemName',\r\n    label: 'Item Name',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  { id: 'itemPrice',\r\n    label: 'Item Price',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  { id: 'itemQuantity',\r\n    label: 'Item Quantity',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  {\r\n    id: 'totalItemPrice',\r\n    label: 'Total Item Price',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nconst products = [\r\n  { name: '', desc: '', price: '' },\r\n  { name: 'Delivery Type', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['No 386', 'Kandy', 'Road', 'Nittabuwa', 'SRILANKA'];\r\nconst payments = [\r\n  { name: 'Card Type', detail: 'Credit Card' },\r\n  { name: 'Card Number', detail: '6527 1332 4286 2542' },\r\n  { name: 'Card Holder Name', detail: 'Amerasinghe N.D.K' },\r\n  { name: 'CVV code', detail: '216' },\r\n  { name: 'Expiry Date', detail: '12/24' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function POFinalReviewForm() {\r\n  const classes = useStyles();\r\n\r\n  const [poRequestManage,setpoRequestManage]=useState([]);\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  const [filtered,setfiltered]=useState([]);\r\n  const [itemName, setitemName] =useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/poroutes/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setpoRequestManage(data);\r\n      });\r\n  }, []);\r\n\r\nconst sum =[];\r\n\r\n// genarate pdf\r\n\r\nconst generatePDF = tickets => {\r\n\r\n  const doc = new jspdf();\r\n  const tableColumn = [\"order ID\", \"Item Name\", \"Item Price\", \"Item Quantity\", \"Item Name\"];\r\n  const tableRows = [];\r\n  const date = Date().split(\" \");\r\n  const dateStr = date[1] + \"-\" + date[2] + \"-\" + date[3];\r\n\r\n  tickets.map(ticket => {\r\n      const ticketData = [\r\n          ticket._id,\r\n          ticket.itemName,\r\n          ticket.itemPrice,\r\n          ticket.itemQuantity,\r\n          ticket.totalItemPrice,\r\n      ];\r\n      tableRows.push(ticketData);\r\n  })\r\n  doc.text(\"WICKRAMA SUPER PLC\", 70, 8).setFontSize(13);\r\n  doc.text(\"Purchase Order Detail Report\", 14, 16).setFontSize(13);\r\n  doc.text(`Report Genarated Date - ${dateStr}`, 14, 23);\r\n  //right down width height\r\n  doc.addImage(img, 'JPEG', 170, 8, 25, 25);\r\n  doc.autoTable(tableColumn, tableRows, { styles: { fontSize: 8, }, startY:35});\r\n  doc.addImage(img1, 'JPEG', 120, 80,70, 40);\r\n  doc.save(\"Contract Details Report.pdf\");\r\n};\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"buttonn\">\r\n       <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={() => generatePDF(poRequestManage)} >GenerateReport</button> <br></br>\r\n            </div>\r\n            <br/>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        <u>Order summary</u>\r\n      </Typography>\r\n\r\n<div style={{display:\"none\"}}>\r\n    {poRequestManage.map((productPO)=>(sum.push(productPO.itemPrice*productPO.itemQuantity)))}\r\n</div>\r\n\r\n\r\n      <List disablePadding>\r\n        {poRequestManage.map((product) => (\r\n        \r\n            \r\n          <ListItem className={classes.listItem} key={product.itemName}>\r\n            <ListItemText primary={product.itemName} secondary={\"Rs: \"+product.itemPrice +\" X \"+product.itemQuantity+\" items\"} />\r\n            <Typography variant=\"body2\">{\"Rs: \"+product.itemPrice*product.itemQuantity}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {\"Rs: \"+sum.reduce((a,b)=>a+b,0)}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            <u>Delivery Details</u>\r\n          </Typography>\r\n          <br/>\r\n          <Typography gutterBottom>Wickrama Super</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            <u>Payment Details</u>\r\n          </Typography>\r\n          <br/>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contract.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React, { useEffect } from \"react\";\r\nimport { useState, createRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\r\nimport { useParams } from \"react-router\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport { Form, Field } from \"formik\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wickrama Super Online Shopping Store\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(),\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(0),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n\r\n  },\r\n\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  //display date\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  }, //end date\r\n\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      // margin: theme.spacing(50),\r\n      // width: theme.spacing(150),\r\n      // height: theme.spacing(60),\r\n      // marginTop: theme.spacing(8),\r\n    },\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function AddContract() {\r\n  const [SupplierName, setsupplierName] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const [AgreementDate, setagreementDate] = useState(\"\");\r\n  const [branchWillingToSupply, setBranchWillingToSupply] = useState(\"\");\r\n  const [productType, setProductType] = useState(\"\");\r\n  const [contractPeriod, setContractPeriod] = useState(\"\");\r\n  const [Description, setdescription] = useState(\"\");\r\n\r\n  const [value, setValue] = React.useState(\"Controlled\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  //code goes here...\r\n\r\n  const [contract, setContract] = useState({\r\n    SupplierName: \"\",\r\n    AgreementDate: new Date(),\r\n    branchWillingToSupply: \"\",\r\n    productType: \"\",\r\n    contractPeriod: new Date(),\r\n    Description: \"\",\r\n    suppliers: [{}],\r\n  });\r\n\r\n  const [supplier, setSuppliers] = useState([]);\r\n  const [branch, setBranches] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(contract);\r\n    axios\r\n      .post(\"http://localhost:9000/contract/add\", contract)\r\n      .then((res) => {\r\n        alert(\"Contract Created Successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/supplier/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSuppliers(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/branch/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setBranches(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n          <Paper className={classes.paper} elevation={10}>\r\n    {/* // <div className={classes.root}> */}\r\n      {/* <Paper variant=\"outlined\" square/> */}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n         <center> <Avatar className={classes.orange}>C</Avatar></center>\r\n          <br />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n           <center> ADD CONTRACT</center>\r\n          </Typography>\r\n          <br />\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                {/* <TextField\r\n                 autoComplete=\"SupplierName\"\r\n                name=\"SupplierName\"\r\n                 variant=\"outlined\"\r\n                required\r\n                 fullWidth\r\n                 id=\"SupplierName\"\r\n                 label=\"Supplier Name\"\r\n                 autoFocus\r\n                 onChange={(e) => setContract({...contract,SupplierName: e.target.value})}\r\n               /> */}\r\n                {/* <select>\r\n              {supplier ? supplier.map((sup) => {\r\n                return(\r\n                // <div key={sup._id}>\r\n                  <option value={sup._id}>{sup.supplierName}</option>\r\n                // </div>\r\n                  \r\n                )\r\n              }): (null)}\r\n              </select> */}\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  // value={supplierName}\r\n                  label=\"SupplierName\"\r\n                  sx={{ width: 395 }}\r\n                  onChange={(e) =>\r\n                    setContract({ ...contract, SupplierName: e.target.value })\r\n                  }\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Supplier Name</em>\r\n                  </MenuItem>\r\n                  {supplier\r\n                    ? supplier.map((sup) => {\r\n                        return (\r\n                          <MenuItem value={sup.supplierName}>\r\n                            {sup.supplierName}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    // value={supplierName}\r\n                    label=\"Branch Willing To Supply\"\r\n                    sx={{ width: 395 }}\r\n                    onChange={(e) =>\r\n                      setContract({\r\n                        ...contract,\r\n                        branchWillingToSupply: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Branch Willing To Supply </em>\r\n                    </MenuItem>\r\n                    {branch\r\n                      ? branch.map((bran) => {\r\n                          return (\r\n                            <MenuItem value={bran.branchName}>\r\n                              {bran.branchName}\r\n                            </MenuItem>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Select>\r\n                </Grid>\r\n\r\n              <Grid item xs={12} >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"productType\"\r\n                  label=\"productType\"\r\n                  name=\"Product Type\"\r\n                  autoComplete=\"productType\"\r\n                  autoFocus\r\n                  onChange={(e) =>\r\n                    setContract({ ...contract, productType: e.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} >\r\n                <form className={classes.container} noValidate>\r\n                  <TextField\r\n                    id=\"AgreementDate\"\r\n                    variant=\"outlined\"\r\n                    label=\"AgreementDate\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2021-09-14\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) =>\r\n                      setContract({\r\n                        ...contract,\r\n                        AgreementDate: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </form>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} >\r\n                  <form className={classes.container} noValidate>\r\n                    <TextField\r\n                      id=\"contractPeriod\"\r\n                      variant=\"outlined\"\r\n                      label=\"Contract End Date\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2021-09-14\"\r\n                      disablePast\r\n                      className={classes.textField}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) =>\r\n                        setContract({\r\n                          ...contract,\r\n                          contractPeriod: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </form>\r\n                  \r\n                </Grid>\r\n              <hr />\r\n              <Grid item xs={12} >\r\n                <TextField\r\n                  id=\"Description\"\r\n                  label=\"Description\"\r\n                  multiline\r\n                  rows={5}\r\n                  sx={{ width: 395 }}\r\n                  placeholder=\"Contract Aggrement Details\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) =>\r\n                    setContract({ ...contract, Description: e.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n               \r\n                <br />\r\n                <br />\r\n                <br />\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"Do hereby declare that what is stated above is true to the best of my information.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              APPROVE\r\n            </Button>\r\n            {/* <Grid container justifyContent=\"flex-end\"></Grid> */}\r\n          </form>\r\n          </Container>\r\n          </Paper>\r\n        {/* </div> */}\r\n        {/* <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container> */}\r\n    {/* </div> */}\r\n    </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contractDetails.js",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { green, pink } from \"@material-ui/core/colors\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport KeyboardVoiceIcon from \"@material-ui/icons/KeyboardVoice\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SoloAlert from \"soloalert\";\r\nimport axios from \"axios\";\r\nimport { MDBCol } from \"mdbreact\";\r\n\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport jspdf from 'jspdf'\r\nimport \"jspdf-autotable\"\r\nimport img from '../components/wsLogo.jpg'\r\nimport img1 from '../components/signature.jpg'\r\n\r\n//modal import\r\n\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    id: \"SupplierName\",\r\n    label: \"Supplier Name\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"branchWillingToSupply\",\r\n    label: \"Branch\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: \"AgreementDate\",\r\n    label: \"AgreementDate\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: \"productType\",\r\n    label: \"Product Type\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: \"contractPeriod\",\r\n    label: \"Contract Period\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"Description\",\r\n    label: \"Description\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n  // {\r\n  //   id: 'update',\r\n  //   label: 'Update',\r\n  //   minWidth: 170,\r\n  //   align: 'center',\r\n  //   // format: (value) => value.toFixed(2),\r\n  // },\r\n  // {\r\n  //   id: 'delete',\r\n  //   label: 'Delete',\r\n  //   minWidth: 170,\r\n  //   align: 'center',\r\n  //   // format: (value) => value.toFixed(2),\r\n  // },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [createData(\"\", \"\", \"\", \"\")];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(0),\r\n    width: theme.spacing(150),\r\n    height: theme.spacing(60),\r\n    marginTop: theme.spacing(0),\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n  root2: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(35),\r\n    width: theme.spacing(157),\r\n    height: theme.spacing(60),\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  green: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n  container: {\r\n    maxHeight: 450,\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n//modal import\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"75%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  // bgcolor: \"background.paper\",\r\n  // border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function ContractDetails() {\r\n  //modal code\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [contract, setContract] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filtered, setfiltered] = useState([]);\r\n  const [SupplierName, setSupplierName] = useState([]);\r\n  // var UserID =1;\r\n\r\n  //This useEffect function used to get all contract's data\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/contract/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setContract(data);\r\n      });\r\n  }, []);\r\n\r\n  async function delet(id) {\r\n    SoloAlert.confirm({\r\n      title: \"Confirm Delete\",\r\n      body: \"Are you sure\",\r\n      theme: \"dark\",\r\n      useTransparency: true,\r\n      onOk: async function () {\r\n        try {\r\n          const result = await (\r\n            await axios.delete(\r\n              `http://localhost:9000/contract/deleteCont/${id}`\r\n            )\r\n          ).status;\r\n          console.log(result);\r\n\r\n          if (result === 200) {\r\n            SoloAlert.alert({\r\n              title: \"Welcome!\",\r\n              body: \"Deletion is successful\",\r\n              icon: \"success\",\r\n              theme: \"dark\",\r\n              useTransparency: true,\r\n              onOk: function () {\r\n                // window.location = \"/contractDetails\"\r\n              },\r\n            });\r\n          }\r\n        } catch (err) {\r\n          SoloAlert.alert({\r\n            title: \"Oops!\",\r\n            body: \"Something went wrong\",\r\n            icon: \"error\",\r\n            theme: \"dark\",\r\n            useTransparency: true,\r\n            onOk: function () {},\r\n          });\r\n        }\r\n      },\r\n      onCancel: function () {\r\n        SoloAlert.alert({\r\n          title: \"Oops!\",\r\n          body: \"You canceled delete request\",\r\n          icon: \"warning\",\r\n          theme: \"dark\",\r\n          useTransparency: true,\r\n          onOk: function () {},\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  // genarate pdf\r\n\r\n  const generatePDF = tickets => {\r\n\r\n    const doc = new jspdf();\r\n    const tableColumn = [\"Contract ID\", \"Supplier Name\", \"Branch Willing To Supply\", \"Agreement Date\", \"Product Type\", \"Contract Period\", \"Description\"];\r\n    const tableRows = [];\r\n    const date = Date().split(\" \");\r\n    const dateStr = date[1] + \"-\" + date[2] + \"-\" + date[3];\r\n\r\n    tickets.map(ticket => {\r\n        const ticketData = [\r\n            ticket._id,\r\n            ticket.SupplierName,\r\n            ticket.branchWillingToSupply,\r\n            ticket.AgreementDate,\r\n            ticket.productType,\r\n            ticket.contractPeriod,\r\n            ticket.Description,\r\n        ];\r\n        tableRows.push(ticketData);\r\n    })\r\n    doc.text(\"WICKRAMA SUPER PLC\", 70, 8).setFontSize(13);\r\n    doc.text(\"Contract Detail Report\", 14, 16).setFontSize(13);\r\n    doc.text(`Report Genarated Date - ${dateStr}`, 14, 23);\r\n    //right down width height\r\n    doc.addImage(img, 'JPEG', 170, 8, 25, 25);\r\n    doc.autoTable(tableColumn, tableRows, { styles: { fontSize: 8, }, startY:35});\r\n    doc.addImage(img1, 'JPEG', 135, 150,70, 40);\r\n    doc.save(\"Contract Details Report.pdf\");\r\n};\r\n\r\n  return (\r\n    <div className={classes.root2}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Contract Details\r\n        {/* <Avatar className={classes.green}>\r\n        <AssignmentIcon />\r\n      </Avatar> */}\r\n      </Typography>\r\n      <div class=\"buttonn\">\r\n       <button type=\"button\" class=\"btn btn-secondary btn-sm\"  onClick={() => generatePDF(contract)} >GenerateReport</button> <br></br>\r\n            </div>\r\n      <MDBCol md=\"6\">\r\n        <input\r\n          class=\"form-control\"\r\n          id=\"myInput\"\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n          onChange={(e) => {\r\n            setSearchTerm(e.target.value);\r\n          }}\r\n        />\r\n      </MDBCol>\r\n\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {contract\r\n                .filter((value) => {\r\n                  if (searchTerm === \"\") {\r\n                    return value;\r\n                  } else if (\r\n                    value.SupplierName.toLowerCase().includes(\r\n                      searchTerm.toLowerCase()\r\n                    )\r\n                  ) {\r\n                    return value;\r\n                  }\r\n                })\r\n                .map((cont, i) => (\r\n                  // return (\r\n                  <TableRow key={cont._id}>\r\n                    <TableCell>{cont.SupplierName}</TableCell>\r\n                    <TableCell>{cont.AgreementDate}</TableCell>\r\n                    <TableCell>{cont.branchWillingToSupply}</TableCell>\r\n                    <TableCell>{cont.productType}</TableCell>\r\n                    <TableCell>{cont.contractPeriod}</TableCell>\r\n                    {/* <TableCell>{cont.Description} </TableCell> */}\r\n\r\n                    <Modal\r\n                      aria-labelledby=\"unstyled-modal-title\"\r\n                      aria-describedby=\"unstyled-modal-description\"\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                    >\r\n                      <Box sx={style}>\r\n                        <Typography\r\n                          id=\"modal-modal-title\"\r\n                          variant=\"h6\"\r\n                          component=\"h2\"\r\n                        >\r\n                          Contract Information\r\n                        </Typography>\r\n                        \r\n                        <TableCell>{cont.Description} </TableCell>\r\n                      </Box>\r\n                    </Modal>\r\n                    <TableCell>\r\n                      <Button variant=\"text\" onClick={handleOpen}>Info</Button>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Link\r\n                        to={\"/updateCont/\" + cont._id}\r\n                        type=\"submit\"\r\n                        class=\"btn btn-primary\"\r\n                      >\r\n                        <i class=\"fa fa-trash\"></i> UPDATE\r\n                      </Link>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <button\r\n                        type=\"submit\"\r\n                        class=\"btn btn-danger\"\r\n                        onClick={(e) => {\r\n                          delet(cont._id);\r\n                        }}\r\n                      >\r\n                        <i class=\"fa fa-trash\"></i> DELETE\r\n                      </button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n                  // )\r\n                ))}\r\n\r\n              {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplierDetails.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { green, pink } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport SoloAlert from 'soloalert'\r\nimport axios from 'axios';\r\nimport { MDBCol } from \"mdbreact\";\r\n\r\nimport jspdf from 'jspdf'\r\nimport \"jspdf-autotable\"\r\nimport img from '../components/wsLogo.jpg'\r\nimport img1 from '../components/signature.jpg'\r\n\r\n\r\nconst columns = [\r\n  { id: 'supplierName',\r\n    label: 'Supplier Name',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  {\r\n    id: 'supplierEmail',\r\n    label: 'Supplier Email',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'phoneNumber',\r\n    label: 'Phone Number',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'productType',\r\n    label: 'Product Type',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'supplierType',\r\n    label: 'Supplier Type',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'supplierItemType',\r\n    label: 'Supplier Item Type',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'location',\r\n    label: 'Location',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'branchWillingToSupply',\r\n    label: 'Branch Willing To Supply',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'date',\r\n    label: 'Date',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction SupplierDetailsTable(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  SupplierDetailsTable('', '', '','' ),\r\n  \r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n    width: '100%',\r\n    margin: theme.spacing(0),\r\n        width: theme.spacing(150),\r\n        height: theme.spacing(60),\r\n        marginTop: theme.spacing(0),\r\n        ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n        \r\n  },\r\n  root2: {\r\n    width: '100%',\r\n    margin: theme.spacing(35),\r\n        width: theme.spacing(157),\r\n        height: theme.spacing(60),\r\n        marginTop: theme.spacing(0),\r\n    \r\n  },\r\n  green: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  container: {\r\n    maxHeight: 450,\r\n  },\r\n}));\r\n\r\nexport default function SupplierDetails() {\r\n\r\n  const [supplier,setSupplier]=useState([]);\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  const [filtered,setfiltered]=useState([]);\r\n  const [supplierName, setsupplierName] =useState([]);\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('http://localhost:9000/supplier/').then(\r\n      res=>res.json()\r\n    ).then((data)=>{\r\n      setSupplier(data);\r\n    })\r\n  },[]);\r\n\r\n\r\n  async function delet(id) {\r\n    SoloAlert.confirm({\r\n\r\n        title: \"Confirm Delete\",\r\n        body: \"Are you sure\",\r\n        theme: \"dark\",\r\n        useTransparency: true,\r\n        onOk: async function () {\r\n\r\n            try {\r\n                const result = await (await axios.delete(`http://localhost:9000/supplier/deleteSup/${id}`)).status; console.log(result)\r\n\r\n                if (result === 200) {\r\n                    SoloAlert.alert({\r\n                        title: \"Welcome!\",\r\n                        body: \"Deletion is successful\",\r\n                        icon: \"success\",\r\n                        theme: \"dark\",\r\n                        useTransparency: true,\r\n                        onOk: function () {\r\n                            window.location = \"/supplierDetails\"\r\n                        },\r\n\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                SoloAlert.alert({\r\n                    title: \"Oops!\",\r\n                    body: \"Something went wrong\",\r\n                    icon: \"error\",\r\n                    theme: \"dark\",\r\n                    useTransparency: true,\r\n                    onOk: function () {\r\n\r\n                    },\r\n\r\n                });\r\n            }\r\n        },\r\n        onCancel: function () {\r\n            SoloAlert.alert({\r\n                title: \"Oops!\",\r\n                body: \"You canceled delete request\",\r\n                icon: \"warning\",\r\n                theme: \"dark\",\r\n                useTransparency: true,\r\n                onOk: function () {\r\n\r\n                },\r\n\r\n            });\r\n        },\r\n\r\n    })\r\n}\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  //color picker\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: purple[500],\r\n      },\r\n      secondary: {\r\n        main: '#f44336',\r\n      },\r\n    },\r\n  });\r\n  \r\n  // genarate pdf\r\n\r\n  const generatePDF = tickets => {\r\n\r\n    const doc = new jspdf();\r\n    const tableColumn = [\"Supplier ID\", \"Supplier Name\", \"Supplier Email\", \"Phone Number\", \"Product Type\", \"Supplier Type\", \"Supplier Item Type\",\"Location\",\"branchWillingToSupply\",\" date\"];\r\n    const tableRows = [];\r\n    const date = Date().split(\" \");\r\n    const dateStr = date[1] + \"-\" + date[2] + \"-\" + date[3];\r\n\r\n    tickets.map(ticket => {\r\n        const ticketData = [\r\n            ticket._id,\r\n            ticket.supplierName,\r\n            ticket.supplierEmail,\r\n            ticket.phoneNumber,\r\n            ticket.productType,\r\n            ticket.supplierType,\r\n            ticket.supplierItemType,\r\n            ticket.location,\r\n            ticket.branchWillingToSupply,\r\n            ticket. date,\r\n        ];\r\n        tableRows.push(ticketData);\r\n    })\r\n    doc.text(\"WICKRAMA SUPER PLC\", 70, 8).setFontSize(13);\r\n    doc.text(\"Supplier Detail Report\", 14, 16).setFontSize(13);\r\n    doc.text(`Report Genarated Date - ${dateStr}`, 14, 23);\r\n    //right down width height\r\n    doc.addImage(img, 'JPEG', 170, 8, 25, 25);\r\n    doc.autoTable(tableColumn, tableRows, { styles: { fontSize: 8, }, startY:35});\r\n    doc.addImage(img1, 'JPEG', 135, 150,70, 40);\r\n    doc.save(\"Supplier Details Report.pdf\");\r\n};\r\n\r\n  return (\r\n    <div className={classes.root2}>\r\n    <Typography variant=\"h4\" gutterBottom>\r\n        Supplier Details\r\n        {/* <Avatar className={classes.green}>\r\n        <AssignmentIcon />\r\n      </Avatar> */}\r\n      </Typography>\r\n      <div class=\"buttonn\">\r\n       <button type=\"button\" class=\"btn btn-secondary btn-sm\"  onClick={() => generatePDF(supplier)} >GenerateReport</button> <br></br>\r\n            </div>\r\n      <MDBCol md=\"6\">\r\n      <input class=\"form-control\" id=\"myInput\" type=\"text\" placeholder=\"Search..\" onChange={e => { setSearchTerm(e.target.value) }} />\r\n    </MDBCol>\r\n\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          {supplier.filter((value)=>{\r\n  if(searchTerm===\"\"){\r\n    return value;\r\n  }else if(value.supplierName.toLowerCase().includes(searchTerm.toLowerCase())){\r\n    return value;\r\n  }\r\n})\r\n.map((supp,i)=>(\r\n\r\n            // {supplier !=0 ? supplier.map((supp)=>{\r\n            //   return (\r\n                <TableRow key={supp._id}>\r\n                  <TableCell>{supp.supplierName}</TableCell>\r\n                  <TableCell>{supp.supplierEmail}</TableCell>\r\n                  <TableCell>{supp.phoneNumber}</TableCell>\r\n                  <TableCell>{supp.productType}</TableCell>\r\n                  <TableCell>{supp.supplierType}</TableCell>\r\n                  <TableCell>{supp.supplierItemType}</TableCell>\r\n                  <TableCell>{supp.location}</TableCell>\r\n                  <TableCell>{supp.branchWillingToSupply}</TableCell>\r\n                  <TableCell>{supp.date}</TableCell>\r\n                  <TableCell><Link to={\"/updateSup/\"+supp._id} type=\"submit\" class=\"btn btn-primary\" ><i class=\"fa fa-trash\"></i>  UPDATE</Link></TableCell>\r\n                  <TableCell><button type=\"submit\" class=\"btn btn-danger\" onClick={(e) => { delet(supp._id) }}><i class=\"fa fa-trash\"></i>  DELETE</button></TableCell>\r\n                </TableRow>\r\n               \r\n              \r\n            ))}\r\n            \r\n            {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\supplierDetailsUpdate.js",["278","279","280"],"import React from 'react';\r\nimport { useState, createRef } from \"react\";\r\nimport { useEffect } from \"react\"\r\nimport { useParams } from \"react-router\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Wickrama Super Online Shopping Store\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n \r\n    \r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  }));\r\n\r\nexport default function AddSupplier() {\r\n\r\n  const [supplierName, setsupplierName] = useState(\"\");\r\n    const { id } = useParams();\r\n\r\n    const [supplierEmail, setSupplierEmail] = useState(\"\");\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [productType, setProductType] = useState(\"\");\r\n    const [supplierType, setSupplierType] = useState(\"\");\r\n    const [supplierItemType, setSupplierItemType] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [branchWillingToSupply, setBranchWillingToSupply] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n      async function getData(){\r\n            const result = await (await axios.get(`http://localhost:9000/supplier/${id}`)).data.data\r\n            console.log(result)\r\n            //console.log(result[0].supplierName)\r\n            setsupplierName(supplierName.supplierName);\r\n            setSupplierEmail(supplierEmail.supplierEmail);\r\n            setPhoneNumber(phoneNumber.phoneNumber);\r\n            setProductType(productType.productType);\r\n            setSupplierType(supplierType.supplierType);\r\n            setSupplierItemType(supplierItemType.supplierItemType);\r\n            setLocation(location.location);\r\n            setBranchWillingToSupply(branchWillingToSupply.branchWillingToSupply);\r\n            setDate(date.date);\r\n    //         // setsupplierName(result[0].supplierName);\r\n    //         // setSupplierEmail(result[0].supplierEmail);\r\n    //         // setPhoneNumber(result[0].phoneNumber);\r\n    //         // setProductType(result[0].productType);\r\n    //         // setSupplierType(result[0].supplierType);\r\n    //         // setSupplierItemType(result[0].supplierItemType);\r\n    //         // setLocation(result[0].location);\r\n    //         // setBranchWillingToSupply(result[0].branchWillingToSupply);\r\n    //         // setDate(result[0].date);\r\n    //         console.log(supplierName)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('internalSupplier');\r\n  \r\n    const handleChange = (event) => {\r\n      setValue(event.target.value);\r\n    }\r\n//  const [supplierold,setsupplierold]=useState([]);\r\n\r\n//     useEffect(()=>{\r\n//     fetch(`http://localhost:9000/supplier/${id}`)\r\n//     .then((res) => res.json())\r\n//     .then((data) => {\r\n//       setsupplierold(data);\r\n//       console.log(data);\r\n//     });\r\n// }, []);\r\n\r\n  //code goes here...\r\n\r\n\r\n  const [supplier,setSupplier] = useState({\r\n    supplierName: \"\",\r\n    supplierEmail: \"\",\r\n    phoneNumber: \"\",\r\n    productType:\"\",\r\n    supplierType: \"\",\r\n    supplierItemType:\"\",\r\n    location:\"\",\r\n    branchWillingToSupply:\"\",\r\n    date: new Date(),\r\n    // contracts: [{}]\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(supplier);\r\n      axios.put(`http://localhost:9000/supplier/updateSup/${id}`,supplier).then(res => {\r\n          alert('Supplier Successfully Updated!');\r\n          window.location=\"/supplierDetails\"\r\n      }).catch(error => {\r\n          console.log(error.message);\r\n          alert(error.message);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" >\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Update Supplier\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => {handleSubmit(e)}}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n             <TextField\r\n                autoComplete=\"SupplierID\"\r\n                name=\"supplierName\"\r\n                variant=\"outlined\"\r\n                // value={supplierold.supplierName}\r\n                required\r\n                fullWidth\r\n                id=\"supplierName\"\r\n                // label=\"Supplier Name\"\r\n                autoFocus\r\n                onChange={(e) => setSupplier({...supplier,supplierName: e.target.value})}\r\n                // onChange={(e) => e.target.checked ? setContract({...supplier,supplierName: e.target.value}):(null)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n             <TextField\r\n                autoComplete=\"SupplierEmail\"\r\n                name=\"supplierEmail\"\r\n                variant=\"outlined\"\r\n                // value={supplierold.supplierEmail}\r\n                required\r\n                fullWidth\r\n                id=\"supplierEmail\"\r\n                type=\"email\"\r\n                // label=\"supplier Email\"\r\n                autoFocus\r\n                onChange={(e) => setSupplier({...supplier,supplierEmail: e.target.value})}\r\n              />\r\n              </Grid>\r\n\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phoneNumber\"\r\n                // value={supplierold.phoneNumber}\r\n                // label=\"phoneNumber\"\r\n                name=\"phoneNumber\"\r\n                autoComplete=\"PhoneNumber\"\r\n                autoFocus\r\n                onChange={(e) => setSupplier({...supplier,phoneNumber: e.target.value})}\r\n              />\r\n               </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"productType\"\r\n                // label=\"Product Type\"\r\n                name=\"Product Type\"\r\n                autoComplete=\"Product Type\"\r\n                autoFocus\r\n                onChange={(e) => setSupplier({...supplier,productType: e.target.value})}\r\n               \r\n              />\r\n               </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                 <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Supplier Type</FormLabel>\r\n                <RadioGroup  name=\"supplierType\"  onChange={handleChange}>\r\n                    <FormControlLabel value=\"internalSupplier\"  control={<Radio />} label=\"Internal Supplier\" onChange={(e) => setSupplier({...supplier,supplierType: e.target.value})}/>\r\n                    <FormControlLabel value=\"externalSupplier\"  control={<Radio />} label=\"External Supplier\" onChange={(e) => setSupplier({...supplier,supplierType: e.target.value})} />\r\n                    <FormControlLabel value=\"wickrama Supplier\"  control={<Radio />} label=\"Wickrama Supplier\" onChange={(e) => setSupplier({...supplier,supplierType: e.target.value})}/>\r\n                    {/* <FormControlLabel value=\"disabled\" disabled control={<Radio />} label=\"(Disabled option)\" /> */}\r\n                </RadioGroup>\r\n                \r\n                </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                  id=\"date\"\r\n                  // label=\"Date\"\r\n                  type=\"Date\"\r\n                  // value={supplierold.date}\r\n                  defaultValue=\"2021-09-14\"\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setSupplier({...supplier,date: e.target.value})}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                autoComplete=\"supplierItemType\"\r\n                name=\"supplierItemType\"\r\n                variant=\"outlined\"\r\n                // value={supplierold.supplierItemType}\r\n                required\r\n                full Width\r\n                id=\"supplierItemType\"\r\n                // label=\"Supplier Item Type\"\r\n                autoFocus\r\n                onChange={(e) => setSupplier({...supplier,supplierItemType: e.target.value})}\r\n              />\r\n               \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"location\"\r\n                // value={supplierold.location}\r\n                // label=\"Location\"\r\n                name=\"location\"\r\n                autoComplete=\"location\"\r\n                onChange={(e) => setSupplier({...supplier,location: e.target.value})}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"branchWillingToSupply\"\r\n                // value={supplierold.branchWillingToSupply}\r\n                // label=\"branchWillingToSupply\"\r\n                type=\"text\"\r\n                id=\"branchWillingToSupply\"\r\n                onChange={(e) => setSupplier({...supplier,branchWillingToSupply: e.target.value})}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"date\"\r\n                label=\"Date\"\r\n                autoComplete=\"date\"\r\n                id=\"date\"\r\n                onChange={(e) => setSupplier({...supplier,date: e.target.value})}\r\n              />\r\n            </Grid> */}\r\n            \r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n           Update SUPPLIER\r\n          </Button>\r\n          {/* <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n           RESET ALL\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            \r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\purchaseOrder.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\purchaseOrderDetails.js",["300","301","302","303","304","305","306","307","308","309","310","311","312"],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Home.js",[],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\contractDetailsUpdate.js",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React from 'react';\r\nimport { useState, createRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react\"\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Wickrama Super Online Shopping Store\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n \r\n  const useStyles = makeStyles((theme) => ({\r\n\r\n    //display date\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },//end date\r\n\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        // margin: theme.spacing(50),\r\n        // width: theme.spacing(150),\r\n        // height: theme.spacing(60),\r\n        // marginTop: theme.spacing(8),\r\n      },\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    orange: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n   \r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   paper: {\r\n  //     marginTop: theme.spacing(0),\r\n  //     display: 'flex',\r\n  //     flexDirection: 'column',\r\n  //     alignItems: 'center',\r\n  //   },\r\n  //   avatar: {\r\n  //     margin: theme.spacing(1),\r\n  //     backgroundColor: theme.palette.secondary.main,\r\n  //   },\r\n  //   form: {\r\n  //     width: '100%', // Fix IE 11 issue.\r\n  //     marginTop: theme.spacing(3),\r\n  //   },\r\n  //   submit: {\r\n  //     margin: theme.spacing(3, 0, 2),\r\n  //   },\r\n  // }));\r\n\r\nexport default function AddContract() {\r\n\r\n    const [SupplierName, setsupplierName] = useState(\"\");\r\n    const { id } = useParams();\r\n\r\n    const [AgreementDate, setagreementDate] = useState(\"\");\r\n    const [branchWillingToSupply, setBranchWillingToSupply] = useState(\"\");\r\n    const [productType, setProductType] = useState(\"\");\r\n    const [contractPeriod, setContractPeriod] = useState(\"\");\r\n    const [Description, setdescription] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n      async function getData(){\r\n            const result = await (await axios.get(`http://localhost:9000/contract/${id}`)).data.data\r\n            console.log(result)\r\n            //console.log(result[0].supplierName)\r\n            setsupplierName(SupplierName.SupplierName);\r\n            setagreementDate(AgreementDate.AgreementDate);\r\n            setBranchWillingToSupply(branchWillingToSupply.branchWillingToSupply);\r\n            setContractPeriod(contractPeriod.contractPeriod);\r\n            setdescription(Description.Description);\r\n            // console.log(supplierName)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n//   const [contractold,setcontractold]=useState([]);\r\n\r\n//   useEffect(()=>{\r\n//   fetch(`http://localhost:9000/supplier/${id}`)\r\n//   .then((res) => res.json())\r\n//   .then((data) => {\r\n//     setsupplierold(data);\r\n//     console.log(data);\r\n//   });\r\n// }, []);\r\n  \r\n\r\n  //code goes here...\r\n\r\n  const [contract,setContract] = useState({\r\n    SupplierName: \"\",\r\n    AgreementDate: new Date(),\r\n    branchWillingToSupply:\"\",\r\n    productType: \"\",\r\n    contractPeriod: new Date(),\r\n    Description:\"\"\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(contract);\r\n      axios.put(`http://localhost:9000/contract/updateCont/${id}`,contract).then(res => {\r\n          alert('Contract Updated Successfully!');\r\n          window.location=\"/contractDetails\"\r\n      }).catch(error => {\r\n          console.log(error.message);  \r\n          alert(error.message);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    {/* <Paper variant=\"outlined\" square/> */}\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n       <CssBaseline />\r\n       <div className={classes.paper}>\r\n         {/* <Avatar className={classes.avatar}>\r\n           <LockOutlinedIcon />\r\n         </Avatar> */}\r\n         <Avatar className={classes.orange}>C</Avatar>\r\n        <br/>\r\n         <Typography component=\"h1\" variant=\"h5\" >\r\n           UPDATE CONTRACT\r\n         </Typography>\r\n         <br/>\r\n         <form className={classes.form} noValidate onSubmit={(e) => {handleSubmit(e)}}>\r\n           <Grid container spacing={2}>\r\n             <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                 autoComplete=\"SupplierName\"\r\n                name=\"SupplierName\"\r\n                 variant=\"outlined\"\r\n                required\r\n                 fullWidth\r\n                 id=\"SupplierName\"\r\n                 label=\"Supplier Name\"\r\n                 autoFocus\r\n                 onChange={(e) => setContract({...contract,SupplierName: e.target.value})}\r\n               />\r\n             </Grid>\r\n             \r\n             <Grid item xs={12} sm={6}>\r\n             <form className={classes.container} noValidate>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                  id=\"AgreementDate\"\r\n                  label=\"AgreementDate\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2021-09-14\"\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setContract({...contract,AgreementDate: e.target.value})}\r\n                />\r\n              </form>\r\n               </Grid>\r\n             \r\n            <Grid item xs={12} sm={6}>\r\n             <TextField\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                 name=\"branchWillingToSupply\"\r\n                 label=\"branchWillingToSupply\"\r\n                 type=\"text\"\r\n                 id=\"branchWillingToSupply\"\r\n                 onChange={(e) => setContract({...contract,branchWillingToSupply: e.target.value})}\r\n               />\r\n             </Grid>\r\n           <Grid item xs={12} sm={6}>\r\n             <TextField\r\n                 variant=\"outlined\"\r\n                 required\r\n                 fullWidth\r\n                 id=\"productType\"\r\n                 label=\"productType\"\r\n                 name=\"Product Type\"\r\n                 autoComplete=\"productType\"\r\n                 autoFocus\r\n                 onChange={(e) => setContract({...contract,productType: e.target.value})}\r\n               />\r\n                </Grid>\r\n            \r\n             {/* <Grid item xs={12}>\r\n             <TextareaAutosize\r\n                 autoComplete=\"Description\"\r\n                 name=\"Description\"\r\n                 variant=\"outlined\"\r\n                 required\r\n                 ful lWidth\r\n                 id=\"Description\"\r\n                 label=\"Description\"\r\n                 autoFocus\r\n                 maxRows={12}\r\n                 aria-label=\"maximum height\"\r\n                 placeholder=\"Contract Aggrement Details\"\r\n                 defaultValue=\"\"\r\n                 onChange={(e) => setContract({...contract,Description: e.target.value})}\r\n                \r\n               />  \r\n            </Grid> */}\r\n            <hr/>\r\n            <Grid item xs={12} sm={6}>\r\n            <TextField  \r\n          id=\"Description\"\r\n          label=\"Description\"\r\n          multiline\r\n          rows={5}\r\n          placeholder=\"Contract Aggrement Details\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => setContract({...contract,Description: e.target.value})}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n               <Grid item xs={12} >\r\n             <form className={classes.container} noValidate>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                  id=\"contractPeriod\"\r\n                  label=\"Contract End Date\"\r\n                  type=\"date\"\r\n                  defaultValue=\"2021-09-14\"\r\n                  disablePast\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n\r\n\r\n                  onChange={(e) => setContract({...contract,contractPeriod: e.target.value})}\r\n                />\r\n              </form>\r\n               </Grid>\r\n               <br/>\r\n               <br/>\r\n               <br/>\r\n      \r\n       </Grid>\r\n        <Grid item xs={12}>\r\n               <FormControlLabel\r\n                 control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                 label=\"Do hereby declare that what is stated above is true to the best of my information.\"\r\n               />\r\n             </Grid>\r\n           </Grid>\r\n               <Button\r\n             type=\"submit\"\r\n             fullWidth\r\n            variant=\"contained\"\r\n             color=\"primary\"\r\n             className={classes.submit}\r\n           >\r\n            UPDATE\r\n           </Button>\r\n           <Grid container justifyContent=\"flex-end\">\r\n          \r\n           </Grid>\r\n         </form>\r\n       </div>\r\n       <Box mt={5}>\r\n      <Copyright />\r\n    </Box>\r\n     </Container>\r\n     </div>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Modal.js",[],"D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\Branch.js",["329","330","331","332","333","334","335","336"],"import React, { useEffect } from \"react\";\r\nimport { useState, createRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport wslogo from \"../images/wslogo.jpg\"\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Wickrama Super Online Shopping Store\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n\r\n    appBar: {\r\n      position: \"relative\",\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(1),\r\n      // marginLeft:theme.spacing(4),\r\n      padding: theme.spacing(0),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n      },\r\n  \r\n    },\r\n    layout: {\r\n      width: \"auto\",\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        width: 600,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      },\r\n    },\r\n\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[500]),\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n   \r\n    // avatar: {\r\n    //   margin: theme.spacing(1),\r\n    //   backgroundColor: theme.palette.secondary.main,\r\n    // },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nexport default function AddBranch() {\r\n\r\n  const classes = useStyles();\r\n\r\n  //code goes here...\r\n\r\n  const [branch,setBranch] = useState({\r\n    branchName: \"\",\r\n    registereddate: new Date(),\r\n    branchTell: \"\",\r\n    description: \"\"\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(branch);\r\n      axios.post('http://localhost:9000/branch/add',branch).then(res => {\r\n          alert('Branch Successfully added!');\r\n      }).catch(error => {\r\n          console.log(error.message);\r\n          alert(error.message);\r\n      })\r\n  }\r\n\r\n  process.on('unhandledRejection', (reason, p) => {\r\n    console.error('Unhandled Rejection at:', p, 'reason:', reason)\r\n    process.exit(1)\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n          <Paper className={classes.paper} elevation={10}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n    <div id=\"slider\">\r\n      <figure>\r\n        <img src={wslogo} alt />\r\n      </figure>\r\n      </div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          ADD BRANCH\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => {handleSubmit(e)}}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n             <TextField\r\n                autoComplete=\"pname\"\r\n                name=\"branchName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"branchName\"\r\n                label=\"Branch Name\"\r\n                autoFocus\r\n                onChange={(e) => setBranch({...branch,branchName: e.target.value})}\r\n              />\r\n              </Grid>\r\n               \r\n            <Grid item xs={12}>\r\n                  <TextField\r\n                   name=\"registereddate\"\r\n                   variant=\"outlined\"\r\n                    id=\"registereddate\"\r\n                    label=\"Branch registereddate\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    sx={{ width: 187 }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    autoFocus\r\n                    onChange={(e) => setBranch({...branch,registereddate: e.target.value})}\r\n                  />\r\n                </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"branchTell\"\r\n                label=\"Branch Tell NO\"\r\n                name=\"branchTell\"\r\n                autoComplete=\"branchTell\"\r\n                onChange={(e) => setBranch({...branch,branchTell: e.target.value})}\r\n              />\r\n            </Grid>\r\n           \r\n                <Grid item xs={12}>\r\n                <TextField\r\n                autoComplete=\"des\"\r\n                name=\"description\"\r\n                variant=\"outlined\"\r\n                required\r\n                ful lWidth\r\n                id=\"description\"\r\n                label=\"Branch Description\"\r\n                autoFocus\r\n                onChange={(e) => setBranch({...branch,description: e.target.value})}\r\n              />\r\n           \r\n          </Grid>    \r\n          </Grid>     \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            ADD BRANCH\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/branchDetails\" variant=\"body2\">\r\n                check available branches\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n     </Paper>\r\n     {/* </div> */}\r\n     {/* <Box mt={5}>\r\n       <Copyright />\r\n     </Box>\r\n   </Container> */}\r\n {/* </div> */}\r\n </main>\r\n </React.Fragment>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\BranchDetails.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { green, pink } from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport SoloAlert from 'soloalert'\r\nimport axios from 'axios';\r\nimport { MDBCol } from \"mdbreact\";\r\n\r\nimport jspdf from 'jspdf'\r\nimport \"jspdf-autotable\"\r\nimport img from '../components/wsLogo.jpg'\r\nimport img1 from '../components/signature.jpg'\r\n\r\n\r\nconst columns = [\r\n  { id: 'branchName',\r\n    label: 'Branch Name',\r\n    minWidth: 100,\r\n    align: 'center',\r\n    main: '#f44336',\r\n  },\r\n  {\r\n    id: 'registereddatel',\r\n    label: 'Register Date',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'branchTell',\r\n    label: 'Branch Tell NO',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'description',\r\n    label: 'Description',\r\n    minWidth: 170,\r\n    align: 'center',\r\n    // format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nfunction BranchDetailsTable(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  BranchDetailsTable('', '', '','' ),\r\n  \r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n    width: '100%',\r\n    margin: theme.spacing(0),\r\n        width: theme.spacing(150),\r\n        height: theme.spacing(60),\r\n        marginTop: theme.spacing(0),\r\n        ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n        \r\n  },\r\n  root2: {\r\n    width: '100%',\r\n    margin: theme.spacing(35),\r\n        width: theme.spacing(157),\r\n        height: theme.spacing(60),\r\n        marginTop: theme.spacing(0),\r\n    \r\n  },\r\n  green: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  container: {\r\n    maxHeight: 450,\r\n  },\r\n}));\r\n\r\nexport default function BranchDetails() {\r\n\r\n  const [branch,setBranch]=useState([]);\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  const [filtered,setfiltered]=useState([]);\r\n  const [branchName, setbranchName] =useState([]);\r\n\r\n  //This useEffect function used to get all contract's data\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/branch/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setBranch(data);\r\n      });\r\n  }, []);\r\n\r\n  async function delet(id) {\r\n    SoloAlert.confirm({\r\n\r\n        title: \"Confirm Delete\",\r\n        body: \"Are you sure\",\r\n        theme: \"dark\",\r\n        useTransparency: true,\r\n        onOk: async function () {\r\n\r\n            try {\r\n                const result = await (await axios.delete(`http://localhost:9000/branch/deleteBranch/${id}`)).status; console.log(result)\r\n\r\n                if (result === 200) {\r\n                    SoloAlert.alert({\r\n                        title: \"Welcome!\",\r\n                        body: \"Deletion is successful\",\r\n                        icon: \"success\",\r\n                        theme: \"dark\",\r\n                        useTransparency: true,\r\n                        onOk: function () {\r\n                            window.location = \"/branchDetails\"\r\n                        },\r\n\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                SoloAlert.alert({\r\n                    title: \"Oops!\",\r\n                    body: \"Something went wrong\",\r\n                    icon: \"error\",\r\n                    theme: \"dark\",\r\n                    useTransparency: true,\r\n                    onOk: function () {\r\n\r\n                    },\r\n\r\n                });\r\n            }\r\n        },\r\n        onCancel: function () {\r\n            SoloAlert.alert({\r\n                title: \"Oops!\",\r\n                body: \"You canceled delete request\",\r\n                icon: \"warning\",\r\n                theme: \"dark\",\r\n                useTransparency: true,\r\n                onOk: function () {\r\n\r\n                },\r\n\r\n            });\r\n        },\r\n\r\n    })\r\n}\r\n\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  //color picker\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: purple[500],\r\n      },\r\n      secondary: {\r\n        main: '#f44336',\r\n      },\r\n    },\r\n  });\r\n\r\n  // genarate pdf\r\n\r\nconst generatePDF = tickets => {\r\n\r\n  const doc = new jspdf();\r\n  const tableColumn = [\"Branch ID\", \"Branch Name\", \"Registered Date\", \"Branch Tell\", \"Description\"];\r\n  const tableRows = [];\r\n  const date = Date().split(\" \");\r\n  const dateStr = date[1] + \"-\" + date[2] + \"-\" + date[3];\r\n\r\n  tickets.map(ticket => {\r\n      const ticketData = [\r\n          ticket._id,\r\n          ticket.branchName,\r\n          ticket.registereddate,\r\n          ticket.branchTell,\r\n          ticket.description,\r\n      ];\r\n      tableRows.push(ticketData);\r\n  })\r\n  doc.text(\"WICKRAMA SUPER PLC\", 70, 8).setFontSize(13);\r\n  doc.text(\"Branch Details Report\", 14, 16).setFontSize(13);\r\n  doc.text(`Report Genarated Date - ${dateStr}`, 14, 23);\r\n  //right down width height\r\n  doc.addImage(img, 'JPEG', 170, 8, 25, 25);\r\n  doc.autoTable(tableColumn, tableRows, { styles: { fontSize: 8, }, startY:35});\r\n  doc.addImage(img1, 'JPEG', 120, 140,70, 40);\r\n  doc.save(\"Branch Details Report.pdf\");\r\n};\r\n\r\n  return (\r\n    <div className={classes.root2}>\r\n    <Typography variant=\"h4\" gutterBottom>\r\n        Branch Details\r\n        {/* <Avatar className={classes.green}>\r\n        <AssignmentIcon />\r\n      </Avatar> */}\r\n      </Typography>\r\n      <div class=\"buttonn\">\r\n       <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={() => generatePDF(branch)} >GenerateReport</button> <br></br>\r\n            </div>\r\n      <MDBCol md=\"6\">\r\n      <input class=\"form-control\" id=\"myInput\" type=\"text\" placeholder=\"Search..\" onChange={e => { setSearchTerm(e.target.value) }} />\r\n    </MDBCol>\r\n\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          {branch.filter((value)=>{\r\n  if(searchTerm===\"\"){\r\n    return value;\r\n  }else if(value.branchName.toLowerCase().includes(searchTerm.toLowerCase())){\r\n    return value;\r\n  }\r\n})\r\n.map((bran,i)=>(\r\n\r\n            // {supplier !=0 ? supplier.map((supp)=>{\r\n            //   return (\r\n                <TableRow key={bran._id}>\r\n                  <TableCell>{bran.branchName}</TableCell>\r\n                  <TableCell>{bran.registereddate}</TableCell>\r\n                  <TableCell>{bran.branchTell}</TableCell>\r\n                  <TableCell>{bran.description}</TableCell>\r\n                  <TableCell><Link to={\"/updateBranch/\"+bran._id} type=\"submit\" class=\"btn btn-primary\" ><i class=\"fa fa-trash\"></i>  UPDATE</Link></TableCell>\r\n                  <TableCell><button type=\"submit\" class=\"btn btn-danger\" onClick={(e) => { delet(bran._id) }}><i class=\"fa fa-trash\"></i>  DELETE</button></TableCell>\r\n                </TableRow>\r\n               \r\n              \r\n            ))}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Personal Projects\\WS Online Shopping Project\\productInventory\\src\\components\\BranchDetailsUpdate.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React from 'react';\r\nimport { useState, createRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react\"\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Wickrama Super Online Shopping Store\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n \r\n  const useStyles = makeStyles((theme) => ({\r\n\r\n    //display date\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },//end date\r\n\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        // margin: theme.spacing(50),\r\n        // width: theme.spacing(150),\r\n        // height: theme.spacing(60),\r\n        // marginTop: theme.spacing(8),\r\n      },\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    orange: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n   \r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nexport default function AddBranch() {\r\n\r\n    const [branchName, setBranchName] = useState(\"\");\r\n    const { id } = useParams();\r\n\r\n    const [AgreementDate, setagreementDate] = useState(\"\");\r\n    const [registereddate, setRegistereddate] = useState(\"\");\r\n    const [branchTell, setBranchTell] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n      async function getData(){\r\n            const result = await (await axios.get(`http://localhost:9000/branch/${id}`)).data.data\r\n            console.log(result)\r\n            //console.log(result[0].supplierName)\r\n            setBranchName(branchName.branchName);\r\n            setagreementDate(AgreementDate.AgreementDate);\r\n            setBranchTell(branchTell.branchTell);\r\n            setDescription(description.description);\r\n            // console.log(supplierName)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n//   const [contractold,setcontractold]=useState([]);\r\n\r\n//   useEffect(()=>{\r\n//   fetch(`http://localhost:9000/supplier/${id}`)\r\n//   .then((res) => res.json())\r\n//   .then((data) => {\r\n//     setsupplierold(data);\r\n//     console.log(data);\r\n//   });\r\n// }, []);\r\n  \r\n\r\n  //code goes here...\r\n\r\n  const [branch,setBranch] = useState({\r\n    branchName: \"\",\r\n    registereddate: new Date(),\r\n    branchTell:\"\",\r\n    description: \"\",\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(branch);\r\n      axios.put(`http://localhost:9000/branch/updateBranch/${id}`,branch).then(res => {\r\n          alert('Branch Updated Successfully!');\r\n          window.location=\"/BranchDetails\"\r\n      }).catch(error => {\r\n          console.log(error.message);  \r\n          alert(error.message);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      <div className={classes.root}>\r\n      <Avatar className={classes.purple}>AB</Avatar>\r\n    </div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          UPDATE BRANCH\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => {handleSubmit(e)}}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n             <TextField\r\n                autoComplete=\"pname\"\r\n                name=\"branchName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"branchName\"\r\n                label=\"Branch Name\"\r\n                autoFocus\r\n                onChange={(e) => setBranch({...branch,branchName: e.target.value})}\r\n              />\r\n              </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                name=\"registereddate\"\r\n                variant=\"outlined\"\r\n                required\r\n                ful lWidth\r\n                id=\"registereddate\"\r\n                label=\"Branch registereddate\"\r\n                autoFocus\r\n                onChange={(e) => setBranch({...branch,registereddate: e.target.value})}\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"branchTell\"\r\n                label=\"Branch Tell NO\"\r\n                name=\"branchTell\"\r\n                autoComplete=\"branchTell\"\r\n                onChange={(e) => setBranch({...branch,branchTell: e.target.value})}\r\n              />\r\n            </Grid>\r\n           \r\n                <Grid item xs={12}>\r\n                <TextField\r\n                autoComplete=\"des\"\r\n                name=\"description\"\r\n                variant=\"outlined\"\r\n                required\r\n                ful lWidth\r\n                id=\"description\"\r\n                label=\"Branch Description\"\r\n                autoFocus\r\n                onChange={(e) => setBranch({...branch,description: e.target.value})}\r\n              />\r\n           \r\n          </Grid>    \r\n          </Grid>     \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            UPDATE\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n",{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":14},{"ruleId":"385","severity":1,"message":"386","line":7,"column":7,"nodeType":"387","endLine":7,"endColumn":69},{"ruleId":"377","replacedBy":"388"},{"ruleId":"379","replacedBy":"389"},{"ruleId":"381","severity":1,"message":"382","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":14},{"ruleId":"381","severity":1,"message":"390","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":14},{"ruleId":"381","severity":1,"message":"391","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":25},{"ruleId":"381","severity":1,"message":"392","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":12},{"ruleId":"381","severity":1,"message":"393","line":10,"column":8,"nodeType":"383","messageId":"384","endLine":10,"endColumn":13},{"ruleId":"381","severity":1,"message":"394","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":14},{"ruleId":"381","severity":1,"message":"395","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"396","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":16},{"ruleId":"381","severity":1,"message":"397","line":38,"column":9,"nodeType":"383","messageId":"384","endLine":38,"endColumn":16},{"ruleId":"381","severity":1,"message":"398","line":42,"column":9,"nodeType":"383","messageId":"384","endLine":42,"endColumn":21},{"ruleId":"381","severity":1,"message":"399","line":46,"column":9,"nodeType":"383","messageId":"384","endLine":46,"endColumn":20},{"ruleId":"381","severity":1,"message":"400","line":54,"column":12,"nodeType":"383","messageId":"384","endLine":54,"endColumn":29},{"ruleId":"401","severity":1,"message":"402","line":189,"column":30,"nodeType":"403","endLine":189,"endColumn":60},{"ruleId":"401","severity":1,"message":"402","line":202,"column":30,"nodeType":"403","endLine":202,"endColumn":58},{"ruleId":"401","severity":1,"message":"402","line":215,"column":30,"nodeType":"403","endLine":215,"endColumn":59},{"ruleId":"401","severity":1,"message":"402","line":227,"column":30,"nodeType":"403","endLine":227,"endColumn":62},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"405","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":11},{"ruleId":"381","severity":1,"message":"406","line":24,"column":10,"nodeType":"383","messageId":"384","endLine":24,"endColumn":28},{"ruleId":"381","severity":1,"message":"407","line":29,"column":10,"nodeType":"383","messageId":"384","endLine":29,"endColumn":19},{"ruleId":"381","severity":1,"message":"408","line":110,"column":10,"nodeType":"383","messageId":"384","endLine":110,"endColumn":22},{"ruleId":"381","severity":1,"message":"409","line":110,"column":24,"nodeType":"383","messageId":"384","endLine":110,"endColumn":39},{"ruleId":"381","severity":1,"message":"410","line":111,"column":11,"nodeType":"383","messageId":"384","endLine":111,"endColumn":13},{"ruleId":"381","severity":1,"message":"411","line":113,"column":10,"nodeType":"383","messageId":"384","endLine":113,"endColumn":23},{"ruleId":"381","severity":1,"message":"412","line":113,"column":25,"nodeType":"383","messageId":"384","endLine":113,"endColumn":41},{"ruleId":"381","severity":1,"message":"413","line":114,"column":10,"nodeType":"383","messageId":"384","endLine":114,"endColumn":21},{"ruleId":"381","severity":1,"message":"414","line":114,"column":23,"nodeType":"383","messageId":"384","endLine":114,"endColumn":37},{"ruleId":"381","severity":1,"message":"415","line":115,"column":10,"nodeType":"383","messageId":"384","endLine":115,"endColumn":21},{"ruleId":"381","severity":1,"message":"416","line":115,"column":23,"nodeType":"383","messageId":"384","endLine":115,"endColumn":37},{"ruleId":"381","severity":1,"message":"417","line":116,"column":10,"nodeType":"383","messageId":"384","endLine":116,"endColumn":22},{"ruleId":"381","severity":1,"message":"418","line":116,"column":24,"nodeType":"383","messageId":"384","endLine":116,"endColumn":39},{"ruleId":"381","severity":1,"message":"419","line":117,"column":10,"nodeType":"383","messageId":"384","endLine":117,"endColumn":26},{"ruleId":"381","severity":1,"message":"420","line":117,"column":28,"nodeType":"383","messageId":"384","endLine":117,"endColumn":47},{"ruleId":"381","severity":1,"message":"421","line":118,"column":10,"nodeType":"383","messageId":"384","endLine":118,"endColumn":18},{"ruleId":"381","severity":1,"message":"422","line":118,"column":20,"nodeType":"383","messageId":"384","endLine":118,"endColumn":31},{"ruleId":"381","severity":1,"message":"423","line":119,"column":10,"nodeType":"383","messageId":"384","endLine":119,"endColumn":31},{"ruleId":"381","severity":1,"message":"424","line":119,"column":33,"nodeType":"383","messageId":"384","endLine":119,"endColumn":57},{"ruleId":"381","severity":1,"message":"425","line":120,"column":10,"nodeType":"383","messageId":"384","endLine":120,"endColumn":14},{"ruleId":"381","severity":1,"message":"426","line":120,"column":16,"nodeType":"383","messageId":"384","endLine":120,"endColumn":23},{"ruleId":"381","severity":1,"message":"427","line":186,"column":10,"nodeType":"383","messageId":"384","endLine":186,"endColumn":14},{"ruleId":"381","severity":1,"message":"428","line":186,"column":16,"nodeType":"383","messageId":"384","endLine":186,"endColumn":23},{"ruleId":"381","severity":1,"message":"429","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":19},{"ruleId":"381","severity":1,"message":"430","line":4,"column":8,"nodeType":"383","messageId":"384","endLine":4,"endColumn":14},{"ruleId":"381","severity":1,"message":"431","line":5,"column":8,"nodeType":"383","messageId":"384","endLine":5,"endColumn":15},{"ruleId":"381","severity":1,"message":"432","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":16},{"ruleId":"381","severity":1,"message":"433","line":41,"column":7,"nodeType":"383","messageId":"384","endLine":41,"endColumn":11},{"ruleId":"381","severity":1,"message":"434","line":45,"column":7,"nodeType":"383","messageId":"384","endLine":45,"endColumn":14},{"ruleId":"381","severity":1,"message":"435","line":104,"column":10,"nodeType":"383","messageId":"384","endLine":104,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":104,"column":19,"nodeType":"383","messageId":"384","endLine":104,"endColumn":30},{"ruleId":"381","severity":1,"message":"437","line":105,"column":10,"nodeType":"383","messageId":"384","endLine":105,"endColumn":18},{"ruleId":"381","severity":1,"message":"438","line":105,"column":20,"nodeType":"383","messageId":"384","endLine":105,"endColumn":31},{"ruleId":"439","severity":1,"message":"440","line":195,"column":40,"nodeType":"441","messageId":"442","endLine":195,"endColumn":42},{"ruleId":"443","severity":1,"message":"444","line":198,"column":5,"nodeType":"445","messageId":"446","endLine":199,"endColumn":24},{"ruleId":"381","severity":1,"message":"447","line":2,"column":10,"nodeType":"383","messageId":"384","endLine":2,"endColumn":14},{"ruleId":"381","severity":1,"message":"448","line":6,"column":8,"nodeType":"383","messageId":"384","endLine":6,"endColumn":24},{"ruleId":"381","severity":1,"message":"449","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":16},{"ruleId":"381","severity":1,"message":"391","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":25},{"ruleId":"381","severity":1,"message":"392","line":10,"column":8,"nodeType":"383","messageId":"384","endLine":10,"endColumn":12},{"ruleId":"381","severity":1,"message":"393","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":13},{"ruleId":"381","severity":1,"message":"394","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":14},{"ruleId":"381","severity":1,"message":"396","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":16},{"ruleId":"381","severity":1,"message":"450","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":19},{"ruleId":"381","severity":1,"message":"451","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":17},{"ruleId":"381","severity":1,"message":"452","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":13},{"ruleId":"381","severity":1,"message":"453","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":18},{"ruleId":"381","severity":1,"message":"404","line":20,"column":20,"nodeType":"383","messageId":"384","endLine":20,"endColumn":29},{"ruleId":"381","severity":1,"message":"454","line":21,"column":8,"nodeType":"383","messageId":"384","endLine":21,"endColumn":19},{"ruleId":"381","severity":1,"message":"455","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":25},{"ruleId":"381","severity":1,"message":"456","line":60,"column":9,"nodeType":"383","messageId":"384","endLine":60,"endColumn":20},{"ruleId":"381","severity":1,"message":"457","line":64,"column":9,"nodeType":"383","messageId":"384","endLine":64,"endColumn":28},{"ruleId":"381","severity":1,"message":"398","line":69,"column":9,"nodeType":"383","messageId":"384","endLine":69,"endColumn":21},{"ruleId":"381","severity":1,"message":"399","line":73,"column":9,"nodeType":"383","messageId":"384","endLine":73,"endColumn":20},{"ruleId":"381","severity":1,"message":"458","line":81,"column":10,"nodeType":"383","messageId":"384","endLine":81,"endColumn":15},{"ruleId":"381","severity":1,"message":"459","line":85,"column":9,"nodeType":"383","messageId":"384","endLine":85,"endColumn":10},{"ruleId":"401","severity":1,"message":"402","line":163,"column":15,"nodeType":"403","endLine":163,"endColumn":24},{"ruleId":"401","severity":1,"message":"402","line":179,"column":15,"nodeType":"403","endLine":179,"endColumn":24},{"ruleId":"401","severity":1,"message":"402","line":195,"column":15,"nodeType":"403","endLine":195,"endColumn":24},{"ruleId":"401","severity":1,"message":"402","line":263,"column":15,"nodeType":"403","endLine":263,"endColumn":24},{"ruleId":"381","severity":1,"message":"433","line":14,"column":7,"nodeType":"383","messageId":"384","endLine":14,"endColumn":11},{"ruleId":"381","severity":1,"message":"460","line":42,"column":7,"nodeType":"383","messageId":"384","endLine":42,"endColumn":15},{"ruleId":"381","severity":1,"message":"461","line":71,"column":10,"nodeType":"383","messageId":"384","endLine":71,"endColumn":20},{"ruleId":"381","severity":1,"message":"462","line":71,"column":21,"nodeType":"383","messageId":"384","endLine":71,"endColumn":34},{"ruleId":"381","severity":1,"message":"435","line":72,"column":10,"nodeType":"383","messageId":"384","endLine":72,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":72,"column":19,"nodeType":"383","messageId":"384","endLine":72,"endColumn":30},{"ruleId":"381","severity":1,"message":"437","line":73,"column":10,"nodeType":"383","messageId":"384","endLine":73,"endColumn":18},{"ruleId":"381","severity":1,"message":"438","line":73,"column":20,"nodeType":"383","messageId":"384","endLine":73,"endColumn":31},{"ruleId":"439","severity":1,"message":"463","line":95,"column":22,"nodeType":"441","messageId":"464","endLine":95,"endColumn":24},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"405","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":11},{"ruleId":"381","severity":1,"message":"465","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":24},{"ruleId":"381","severity":1,"message":"452","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":13},{"ruleId":"381","severity":1,"message":"453","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":18},{"ruleId":"381","severity":1,"message":"450","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":19},{"ruleId":"381","severity":1,"message":"451","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":17},{"ruleId":"381","severity":1,"message":"466","line":21,"column":10,"nodeType":"383","messageId":"384","endLine":21,"endColumn":26},{"ruleId":"381","severity":1,"message":"467","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":18},{"ruleId":"381","severity":1,"message":"468","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":19},{"ruleId":"381","severity":1,"message":"469","line":25,"column":22,"nodeType":"383","messageId":"384","endLine":25,"endColumn":32},{"ruleId":"381","severity":1,"message":"470","line":27,"column":10,"nodeType":"383","messageId":"384","endLine":27,"endColumn":23},{"ruleId":"381","severity":1,"message":"471","line":27,"column":25,"nodeType":"383","messageId":"384","endLine":27,"endColumn":38},{"ruleId":"381","severity":1,"message":"382","line":32,"column":10,"nodeType":"383","messageId":"384","endLine":32,"endColumn":16},{"ruleId":"381","severity":1,"message":"472","line":32,"column":18,"nodeType":"383","messageId":"384","endLine":32,"endColumn":23},{"ruleId":"381","severity":1,"message":"473","line":32,"column":25,"nodeType":"383","messageId":"384","endLine":32,"endColumn":30},{"ruleId":"381","severity":1,"message":"474","line":33,"column":10,"nodeType":"383","messageId":"384","endLine":33,"endColumn":14},{"ruleId":"381","severity":1,"message":"475","line":33,"column":16,"nodeType":"383","messageId":"384","endLine":33,"endColumn":21},{"ruleId":"381","severity":1,"message":"407","line":35,"column":10,"nodeType":"383","messageId":"384","endLine":35,"endColumn":19},{"ruleId":"476","severity":1,"message":"477","line":103,"column":3,"nodeType":"478","messageId":"479","endLine":103,"endColumn":8},{"ruleId":"381","severity":1,"message":"480","line":121,"column":10,"nodeType":"383","messageId":"384","endLine":121,"endColumn":22},{"ruleId":"381","severity":1,"message":"409","line":121,"column":24,"nodeType":"383","messageId":"384","endLine":121,"endColumn":39},{"ruleId":"381","severity":1,"message":"410","line":122,"column":11,"nodeType":"383","messageId":"384","endLine":122,"endColumn":13},{"ruleId":"381","severity":1,"message":"481","line":124,"column":10,"nodeType":"383","messageId":"384","endLine":124,"endColumn":23},{"ruleId":"381","severity":1,"message":"482","line":124,"column":25,"nodeType":"383","messageId":"384","endLine":124,"endColumn":41},{"ruleId":"381","severity":1,"message":"423","line":125,"column":10,"nodeType":"383","messageId":"384","endLine":125,"endColumn":31},{"ruleId":"381","severity":1,"message":"424","line":125,"column":33,"nodeType":"383","messageId":"384","endLine":125,"endColumn":57},{"ruleId":"381","severity":1,"message":"415","line":126,"column":10,"nodeType":"383","messageId":"384","endLine":126,"endColumn":21},{"ruleId":"381","severity":1,"message":"416","line":126,"column":23,"nodeType":"383","messageId":"384","endLine":126,"endColumn":37},{"ruleId":"381","severity":1,"message":"483","line":127,"column":10,"nodeType":"383","messageId":"384","endLine":127,"endColumn":24},{"ruleId":"381","severity":1,"message":"484","line":127,"column":26,"nodeType":"383","messageId":"384","endLine":127,"endColumn":43},{"ruleId":"381","severity":1,"message":"485","line":128,"column":10,"nodeType":"383","messageId":"384","endLine":128,"endColumn":21},{"ruleId":"381","severity":1,"message":"486","line":128,"column":23,"nodeType":"383","messageId":"384","endLine":128,"endColumn":37},{"ruleId":"381","severity":1,"message":"458","line":130,"column":10,"nodeType":"383","messageId":"384","endLine":130,"endColumn":15},{"ruleId":"381","severity":1,"message":"487","line":132,"column":9,"nodeType":"383","messageId":"384","endLine":132,"endColumn":21},{"ruleId":"381","severity":1,"message":"488","line":12,"column":17,"nodeType":"383","messageId":"384","endLine":12,"endColumn":21},{"ruleId":"381","severity":1,"message":"489","line":13,"column":8,"nodeType":"383","messageId":"384","endLine":13,"endColumn":14},{"ruleId":"381","severity":1,"message":"490","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":18},{"ruleId":"381","severity":1,"message":"491","line":15,"column":8,"nodeType":"383","messageId":"384","endLine":15,"endColumn":20},{"ruleId":"381","severity":1,"message":"492","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":22},{"ruleId":"381","severity":1,"message":"493","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":18},{"ruleId":"381","severity":1,"message":"494","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":23},{"ruleId":"381","severity":1,"message":"495","line":21,"column":8,"nodeType":"383","messageId":"384","endLine":21,"endColumn":25},{"ruleId":"381","severity":1,"message":"496","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":12},{"ruleId":"381","severity":1,"message":"497","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":16},{"ruleId":"381","severity":1,"message":"498","line":24,"column":8,"nodeType":"383","messageId":"384","endLine":24,"endColumn":16},{"ruleId":"381","severity":1,"message":"382","line":33,"column":10,"nodeType":"383","messageId":"384","endLine":33,"endColumn":16},{"ruleId":"381","severity":1,"message":"472","line":33,"column":18,"nodeType":"383","messageId":"384","endLine":33,"endColumn":23},{"ruleId":"476","severity":1,"message":"499","line":113,"column":5,"nodeType":"478","messageId":"479","endLine":113,"endColumn":10},{"ruleId":"476","severity":1,"message":"499","line":123,"column":5,"nodeType":"478","messageId":"479","endLine":123,"endColumn":10},{"ruleId":"381","severity":1,"message":"435","line":162,"column":10,"nodeType":"383","messageId":"384","endLine":162,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":162,"column":20,"nodeType":"383","messageId":"384","endLine":162,"endColumn":31},{"ruleId":"381","severity":1,"message":"480","line":163,"column":10,"nodeType":"383","messageId":"384","endLine":163,"endColumn":22},{"ruleId":"381","severity":1,"message":"500","line":163,"column":24,"nodeType":"383","messageId":"384","endLine":163,"endColumn":39},{"ruleId":"439","severity":1,"message":"463","line":250,"column":24,"nodeType":"441","messageId":"464","endLine":250,"endColumn":26},{"ruleId":"439","severity":1,"message":"440","line":313,"column":33,"nodeType":"441","messageId":"442","endLine":313,"endColumn":35},{"ruleId":"381","severity":1,"message":"493","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":18},{"ruleId":"381","severity":1,"message":"497","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"488","line":13,"column":17,"nodeType":"383","messageId":"384","endLine":13,"endColumn":21},{"ruleId":"381","severity":1,"message":"489","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":14},{"ruleId":"381","severity":1,"message":"490","line":15,"column":8,"nodeType":"383","messageId":"384","endLine":15,"endColumn":18},{"ruleId":"381","severity":1,"message":"491","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":20},{"ruleId":"381","severity":1,"message":"492","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":22},{"ruleId":"476","severity":1,"message":"499","line":114,"column":9,"nodeType":"478","messageId":"479","endLine":114,"endColumn":14},{"ruleId":"476","severity":1,"message":"499","line":125,"column":9,"nodeType":"478","messageId":"479","endLine":125,"endColumn":14},{"ruleId":"381","severity":1,"message":"435","line":143,"column":10,"nodeType":"383","messageId":"384","endLine":143,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":143,"column":19,"nodeType":"383","messageId":"384","endLine":143,"endColumn":30},{"ruleId":"381","severity":1,"message":"408","line":144,"column":10,"nodeType":"383","messageId":"384","endLine":144,"endColumn":22},{"ruleId":"381","severity":1,"message":"409","line":144,"column":24,"nodeType":"383","messageId":"384","endLine":144,"endColumn":39},{"ruleId":"381","severity":1,"message":"501","line":226,"column":9,"nodeType":"383","messageId":"384","endLine":226,"endColumn":14},{"ruleId":"439","severity":1,"message":"463","line":247,"column":24,"nodeType":"441","messageId":"464","endLine":247,"endColumn":26},{"ruleId":"502","severity":1,"message":"503","line":258,"column":13,"nodeType":"504","messageId":"505","endLine":258,"endColumn":25,"fix":"506"},{"ruleId":"439","severity":1,"message":"440","line":305,"column":35,"nodeType":"441","messageId":"442","endLine":305,"endColumn":37},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"507","severity":1,"message":"508","line":110,"column":8,"nodeType":"509","endLine":110,"endColumn":10,"suggestions":"510"},{"ruleId":"381","severity":1,"message":"458","line":114,"column":12,"nodeType":"383","messageId":"384","endLine":114,"endColumn":17},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"511","line":3,"column":10,"nodeType":"383","messageId":"384","endLine":3,"endColumn":19},{"ruleId":"381","severity":1,"message":"452","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":13},{"ruleId":"381","severity":1,"message":"453","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":18},{"ruleId":"381","severity":1,"message":"450","line":21,"column":8,"nodeType":"383","messageId":"384","endLine":21,"endColumn":19},{"ruleId":"381","severity":1,"message":"451","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":17},{"ruleId":"381","severity":1,"message":"437","line":71,"column":10,"nodeType":"383","messageId":"384","endLine":71,"endColumn":18},{"ruleId":"381","severity":1,"message":"512","line":71,"column":20,"nodeType":"383","messageId":"384","endLine":71,"endColumn":31},{"ruleId":"381","severity":1,"message":"410","line":72,"column":13,"nodeType":"383","messageId":"384","endLine":72,"endColumn":15},{"ruleId":"381","severity":1,"message":"411","line":74,"column":12,"nodeType":"383","messageId":"384","endLine":74,"endColumn":25},{"ruleId":"381","severity":1,"message":"412","line":74,"column":27,"nodeType":"383","messageId":"384","endLine":74,"endColumn":43},{"ruleId":"381","severity":1,"message":"513","line":75,"column":12,"nodeType":"383","messageId":"384","endLine":75,"endColumn":18},{"ruleId":"381","severity":1,"message":"514","line":75,"column":20,"nodeType":"383","messageId":"384","endLine":75,"endColumn":29},{"ruleId":"381","severity":1,"message":"408","line":76,"column":12,"nodeType":"383","messageId":"384","endLine":76,"endColumn":24},{"ruleId":"381","severity":1,"message":"500","line":76,"column":26,"nodeType":"383","messageId":"384","endLine":76,"endColumn":41},{"ruleId":"381","severity":1,"message":"425","line":77,"column":12,"nodeType":"383","messageId":"384","endLine":77,"endColumn":16},{"ruleId":"381","severity":1,"message":"426","line":77,"column":18,"nodeType":"383","messageId":"384","endLine":77,"endColumn":25},{"ruleId":"381","severity":1,"message":"515","line":78,"column":12,"nodeType":"383","messageId":"384","endLine":78,"endColumn":20},{"ruleId":"381","severity":1,"message":"516","line":78,"column":22,"nodeType":"383","messageId":"384","endLine":78,"endColumn":33},{"ruleId":"381","severity":1,"message":"488","line":13,"column":17,"nodeType":"383","messageId":"384","endLine":13,"endColumn":21},{"ruleId":"381","severity":1,"message":"489","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":14},{"ruleId":"381","severity":1,"message":"490","line":15,"column":8,"nodeType":"383","messageId":"384","endLine":15,"endColumn":18},{"ruleId":"381","severity":1,"message":"491","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":20},{"ruleId":"381","severity":1,"message":"492","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":22},{"ruleId":"476","severity":1,"message":"499","line":82,"column":9,"nodeType":"478","messageId":"479","endLine":82,"endColumn":14},{"ruleId":"476","severity":1,"message":"499","line":93,"column":9,"nodeType":"478","messageId":"479","endLine":93,"endColumn":14},{"ruleId":"381","severity":1,"message":"435","line":111,"column":10,"nodeType":"383","messageId":"384","endLine":111,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":111,"column":19,"nodeType":"383","messageId":"384","endLine":111,"endColumn":30},{"ruleId":"381","severity":1,"message":"437","line":112,"column":10,"nodeType":"383","messageId":"384","endLine":112,"endColumn":18},{"ruleId":"381","severity":1,"message":"512","line":112,"column":20,"nodeType":"383","messageId":"384","endLine":112,"endColumn":31},{"ruleId":"381","severity":1,"message":"501","line":194,"column":9,"nodeType":"383","messageId":"384","endLine":194,"endColumn":14},{"ruleId":"439","severity":1,"message":"440","line":235,"column":40,"nodeType":"441","messageId":"442","endLine":235,"endColumn":42},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"465","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":24},{"ruleId":"381","severity":1,"message":"452","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":13},{"ruleId":"381","severity":1,"message":"453","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":18},{"ruleId":"381","severity":1,"message":"450","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":19},{"ruleId":"381","severity":1,"message":"451","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":17},{"ruleId":"381","severity":1,"message":"466","line":21,"column":10,"nodeType":"383","messageId":"384","endLine":21,"endColumn":26},{"ruleId":"381","severity":1,"message":"467","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":18},{"ruleId":"381","severity":1,"message":"468","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":19},{"ruleId":"381","severity":1,"message":"393","line":24,"column":8,"nodeType":"383","messageId":"384","endLine":24,"endColumn":13},{"ruleId":"381","severity":1,"message":"469","line":25,"column":22,"nodeType":"383","messageId":"384","endLine":25,"endColumn":32},{"ruleId":"381","severity":1,"message":"415","line":116,"column":12,"nodeType":"383","messageId":"384","endLine":116,"endColumn":23},{"ruleId":"381","severity":1,"message":"416","line":116,"column":25,"nodeType":"383","messageId":"384","endLine":116,"endColumn":39},{"ruleId":"507","severity":1,"message":"517","line":134,"column":8,"nodeType":"509","endLine":134,"endColumn":10,"suggestions":"518"},{"ruleId":"381","severity":1,"message":"458","line":138,"column":10,"nodeType":"383","messageId":"384","endLine":138,"endColumn":15},{"ruleId":"381","severity":1,"message":"487","line":140,"column":9,"nodeType":"383","messageId":"384","endLine":140,"endColumn":21},{"ruleId":"381","severity":1,"message":"511","line":1,"column":17,"nodeType":"383","messageId":"384","endLine":1,"endColumn":26},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"489","line":3,"column":8,"nodeType":"383","messageId":"384","endLine":3,"endColumn":14},{"ruleId":"381","severity":1,"message":"448","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":24},{"ruleId":"381","severity":1,"message":"449","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":16},{"ruleId":"381","severity":1,"message":"465","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":24},{"ruleId":"381","severity":1,"message":"519","line":15,"column":10,"nodeType":"383","messageId":"384","endLine":15,"endColumn":20},{"ruleId":"520","severity":1,"message":"521","line":126,"column":9,"nodeType":"387","endLine":126,"endColumn":33},{"ruleId":"381","severity":1,"message":"522","line":9,"column":8,"nodeType":"383","messageId":"384","endLine":9,"endColumn":23},{"ruleId":"381","severity":1,"message":"493","line":11,"column":8,"nodeType":"383","messageId":"384","endLine":11,"endColumn":18},{"ruleId":"381","severity":1,"message":"497","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":16},{"ruleId":"381","severity":1,"message":"488","line":13,"column":17,"nodeType":"383","messageId":"384","endLine":13,"endColumn":21},{"ruleId":"381","severity":1,"message":"489","line":14,"column":8,"nodeType":"383","messageId":"384","endLine":14,"endColumn":14},{"ruleId":"381","severity":1,"message":"490","line":15,"column":8,"nodeType":"383","messageId":"384","endLine":15,"endColumn":18},{"ruleId":"381","severity":1,"message":"491","line":16,"column":8,"nodeType":"383","messageId":"384","endLine":16,"endColumn":20},{"ruleId":"381","severity":1,"message":"492","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":22},{"ruleId":"381","severity":1,"message":"433","line":69,"column":7,"nodeType":"383","messageId":"384","endLine":69,"endColumn":11},{"ruleId":"476","severity":1,"message":"499","line":79,"column":9,"nodeType":"478","messageId":"479","endLine":79,"endColumn":14},{"ruleId":"476","severity":1,"message":"499","line":90,"column":9,"nodeType":"478","messageId":"479","endLine":90,"endColumn":14},{"ruleId":"381","severity":1,"message":"435","line":108,"column":10,"nodeType":"383","messageId":"384","endLine":108,"endColumn":18},{"ruleId":"381","severity":1,"message":"436","line":108,"column":19,"nodeType":"383","messageId":"384","endLine":108,"endColumn":30},{"ruleId":"381","severity":1,"message":"523","line":109,"column":10,"nodeType":"383","messageId":"384","endLine":109,"endColumn":20},{"ruleId":"381","severity":1,"message":"524","line":109,"column":22,"nodeType":"383","messageId":"384","endLine":109,"endColumn":35},{"ruleId":"381","severity":1,"message":"525","line":177,"column":10,"nodeType":"383","messageId":"384","endLine":177,"endColumn":14},{"ruleId":"381","severity":1,"message":"526","line":178,"column":10,"nodeType":"383","messageId":"384","endLine":178,"endColumn":21},{"ruleId":"381","severity":1,"message":"527","line":180,"column":9,"nodeType":"383","messageId":"384","endLine":180,"endColumn":25},{"ruleId":"381","severity":1,"message":"528","line":184,"column":9,"nodeType":"383","messageId":"384","endLine":184,"endColumn":32},{"ruleId":"381","severity":1,"message":"501","line":190,"column":9,"nodeType":"383","messageId":"384","endLine":190,"endColumn":14},{"ruleId":"439","severity":1,"message":"463","line":211,"column":22,"nodeType":"441","messageId":"464","endLine":211,"endColumn":24},{"ruleId":"439","severity":1,"message":"440","line":264,"column":33,"nodeType":"441","messageId":"442","endLine":264,"endColumn":35},{"ruleId":"381","severity":1,"message":"404","line":2,"column":20,"nodeType":"383","messageId":"384","endLine":2,"endColumn":29},{"ruleId":"381","severity":1,"message":"448","line":7,"column":8,"nodeType":"383","messageId":"384","endLine":7,"endColumn":24},{"ruleId":"381","severity":1,"message":"449","line":8,"column":8,"nodeType":"383","messageId":"384","endLine":8,"endColumn":16},{"ruleId":"381","severity":1,"message":"465","line":12,"column":8,"nodeType":"383","messageId":"384","endLine":12,"endColumn":24},{"ruleId":"381","severity":1,"message":"452","line":17,"column":8,"nodeType":"383","messageId":"384","endLine":17,"endColumn":13},{"ruleId":"381","severity":1,"message":"453","line":18,"column":8,"nodeType":"383","messageId":"384","endLine":18,"endColumn":18},{"ruleId":"381","severity":1,"message":"450","line":19,"column":8,"nodeType":"383","messageId":"384","endLine":19,"endColumn":19},{"ruleId":"381","severity":1,"message":"451","line":20,"column":8,"nodeType":"383","messageId":"384","endLine":20,"endColumn":17},{"ruleId":"381","severity":1,"message":"466","line":21,"column":10,"nodeType":"383","messageId":"384","endLine":21,"endColumn":26},{"ruleId":"381","severity":1,"message":"467","line":22,"column":8,"nodeType":"383","messageId":"384","endLine":22,"endColumn":18},{"ruleId":"381","severity":1,"message":"468","line":23,"column":8,"nodeType":"383","messageId":"384","endLine":23,"endColumn":19},{"ruleId":"381","severity":1,"message":"393","line":24,"column":8,"nodeType":"383","messageId":"384","endLine":24,"endColumn":13},{"ruleId":"381","severity":1,"message":"469","line":25,"column":22,"nodeType":"383","messageId":"384","endLine":25,"endColumn":32},{"ruleId":"381","severity":1,"message":"529","line":95,"column":12,"nodeType":"383","messageId":"384","endLine":95,"endColumn":26},{"ruleId":"381","severity":1,"message":"530","line":95,"column":28,"nodeType":"383","messageId":"384","endLine":95,"endColumn":45},{"ruleId":"507","severity":1,"message":"531","line":112,"column":8,"nodeType":"509","endLine":112,"endColumn":10,"suggestions":"532"},{"ruleId":"381","severity":1,"message":"458","line":116,"column":10,"nodeType":"383","messageId":"384","endLine":116,"endColumn":15},{"ruleId":"381","severity":1,"message":"487","line":118,"column":9,"nodeType":"383","messageId":"384","endLine":118,"endColumn":21},"no-native-reassign",["533"],"no-negated-in-lhs",["534"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["533"],["534"],"'Button' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Paper' is defined but never used.","'Popper' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'classes' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleListKeyDown' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createRef' is defined but never used.","'Box' is defined but never used.","'ValidatorComponent' is defined but never used.","'Copyright' is defined but never used.","'supplierName' is assigned a value but never used.","'setsupplierName' is assigned a value but never used.","'id' is assigned a value but never used.","'supplierEmail' is assigned a value but never used.","'setSupplierEmail' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'productType' is assigned a value but never used.","'setProductType' is assigned a value but never used.","'supplierType' is assigned a value but never used.","'setSupplierType' is assigned a value but never used.","'supplierItemType' is assigned a value but never used.","'setSupplierItemType' is assigned a value but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'branchWillingToSupply' is assigned a value but never used.","'setBranchWillingToSupply' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'CssBaseline' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'contract' is defined but never used.","'rows' is assigned a value but never used.","'columns' is assigned a value but never used.","'filtered' is assigned a value but never used.","'setfiltered' is assigned a value but never used.","'itemName' is assigned a value but never used.","'setitemName' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Link' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'ButtonGroup' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'handleMenuItemClick' is assigned a value but never used.","'value' is assigned a value but never used.","'e' is assigned a value but never used.","'products' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'LockOutlinedIcon' is defined but never used.","'TextareaAutosize' is defined but never used.","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","'deepPurple' is defined but never used.","'ValidatorForm' is defined but never used.","'TextValidator' is defined but never used.","'Image' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","unexpected","'SupplierName' is assigned a value but never used.","'AgreementDate' is assigned a value but never used.","'setagreementDate' is assigned a value but never used.","'contractPeriod' is assigned a value but never used.","'setContractPeriod' is assigned a value but never used.","'Description' is assigned a value but never used.","'setdescription' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'pink' is defined but never used.","'Avatar' is defined but never used.","'FolderIcon' is defined but never used.","'PageviewIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CloudUploadIcon' is defined but never used.","'KeyboardVoiceIcon' is defined but never used.","'Icon' is defined but never used.","'SaveIcon' is defined but never used.","'InfoIcon' is defined but never used.","Duplicate key 'width'.","'setSupplierName' is assigned a value but never used.","'theme' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property date.","MemberExpression","unexpectedWhitespace",{"range":"535","text":"536"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'branchWillingToSupply.branchWillingToSupply', 'date.date', 'id', 'location.location', 'phoneNumber.phoneNumber', 'productType.productType', 'supplierEmail.supplierEmail', 'supplierItemType.supplierItemType', 'supplierName.supplierName', and 'supplierType.supplierType'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setsupplierName' needs the current value of 'supplierName.supplierName'.","ArrayExpression",["537"],"'useEffect' is defined but never used.","'setItemName' is assigned a value but never used.","'branch' is assigned a value but never used.","'setBranch' is assigned a value but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AgreementDate.AgreementDate', 'Description.Description', 'SupplierName.SupplierName', 'branchWillingToSupply.branchWillingToSupply', 'contractPeriod.contractPeriod', and 'id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setsupplierName' needs the current value of 'SupplierName.SupplierName'.",["538"],"'deepOrange' is defined but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","'TablePagination' is defined but never used.","'branchName' is assigned a value but never used.","'setbranchName' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'registereddate' is assigned a value but never used.","'setRegistereddate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AgreementDate.AgreementDate', 'branchName.branchName', 'branchTell.branchTell', 'description.description', and 'id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBranchName' needs the current value of 'branchName.branchName'.",["539"],"no-global-assign","no-unsafe-negation",[7051,7053],".",{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [branchWillingToSupply.branchWillingToSupply, date.date, id, location.location, phoneNumber.phoneNumber, productType.productType, supplierEmail.supplierEmail, supplierItemType.supplierItemType, supplierName.supplierName, supplierType.supplierType]",{"range":"546","text":"547"},"Update the dependencies array to be: [AgreementDate.AgreementDate, Description.Description, SupplierName.SupplierName, branchWillingToSupply.branchWillingToSupply, contractPeriod.contractPeriod, id]",{"range":"548","text":"549"},"Update the dependencies array to be: [AgreementDate.AgreementDate, branchName.branchName, branchTell.branchTell, description.description, id]",{"range":"550","text":"551"},[4085,4087],"[branchWillingToSupply.branchWillingToSupply, date.date, id, location.location, phoneNumber.phoneNumber, productType.productType, supplierEmail.supplierEmail, supplierItemType.supplierItemType, supplierName.supplierName, supplierType.supplierType]",[4397,4399],"[AgreementDate.AgreementDate, Description.Description, SupplierName.SupplierName, branchWillingToSupply.branchWillingToSupply, contractPeriod.contractPeriod, id]",[3679,3681],"[AgreementDate.AgreementDate, branchName.branchName, branchTell.branchTell, description.description, id]"]